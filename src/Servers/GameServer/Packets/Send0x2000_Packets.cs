using System;
using LibFaolan.Data;
using LibFaolan.Network;

namespace GameServer
{
    partial class GameServerListener
    {
        private static void ApplySpell(NetworkClient client, UInt32 applyTo, UInt32 applyFrom, UInt32 spellId,
            byte[] data = null)
        {
            // Use as 'dummy' data (comes from Scythe Shield Rank 3 (3 hours, 20 min, 28ish sec))
            var spellData = new byte[]
            {
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x13, 0x7E, 0x26, // 1277478
                0x00, 0x01,
                0x00, 0x00, 0x00, 0x01,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x02, 0x38, 0x7E, // 145534 
                0x00, 0x00, 0x00, 0x50, // 80
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x50, // 80
                0x00, 0x00, 0x00, 0x00,
                0x14, 0xC5, 0xC9, 0x12 // 348506386
            };

            if (data == null)
                data = spellData;

            new PacketStream()
                .WriteHeader(Sender0, Receiver0, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.ApplySpell)
                    .WriteUInt32(0x0000C350)
                    .WriteUInt32(applyTo) //Apply to ?
                    .WriteUInt16(0x0000)
                    .WriteUInt32(spellId) // SpellID
                    .WriteUInt32(0x0000C350)
                    .WriteUInt32(applyFrom) // apply from ? 
                    .WriteArray(data))
                .Send(client);
        }

        private static void SendPlayerBuffsTest(NetworkClient client, Account account)
        {
            var packetData1372 = new byte[]
            {
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x13, 0x7E, 0x26, // 1277478
                0x00, 0x01,
                0x00, 0x00, 0x00, 0x01,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x02, 0x38, 0x7E, // 145534 
                0x00, 0x00, 0x00, 0x50, // 80
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x50, // 80
                0x00, 0x00, 0x00, 0x00,
                0x14, 0xC5, 0xC9, 0x12 // 348506386
            };

            var packetData1382 = new byte[]
            {
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x13, 0x7F, 0x64,
                0x00, 0x01,
                0x00, 0x00, 0x00, 0x01,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x03, 0x65, 0xD3,
                0x00, 0x00, 0x00, 0x50,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x50,
                0x00, 0x00, 0x00, 0x00,
                0x14, 0xC5, 0xD5, 0x7E
            };

            // Scythe Shield Rank 3 (3 hours, 20 min, 28ish sec)
            ApplySpell(client, account.ClientInstance, account.ClientInstance, 0x02387E00); //, packetData1372);

            // Set's Cold Hatred (No timer)
            ApplySpell(client, account.ClientInstance, account.ClientInstance, 0x0365D300); //, packetData1382);
        }

        private static void SendSitOnMountTest(NetworkClient client, Account account)
        {
            /*var packetData1402 = new byte[]
            {
                0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 
                0x00, 0x05, 0x7E, 0x40, 
                0x00, 0x01, 
                0x00, 0x00, 0x00, 0x01,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x3D, 0xFA, 0x48, 
                0x00, 0x00, 0x00, 0x50, 
                0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x50, 
                0x00, 0x00, 0x00, 0x00,
                0x14, 0x39, 0xCA, 0x16
            };

            new PacketStream() // unknown
                .WriteHeader(Sender0, Receiver0, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.OxF98E10B3)
                    .WriteUInt32(0x0000C350)
                    .WriteUInt32(account.ClientInstance)
                    .WriteUInt32(0x00000F42)
                    .WriteByte(0x66)
                    .WriteUInt32(0x0000000A))
                .Send(client); */

            var packetData1392 = new byte[]
            {
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x82, 0xB8, 0xF6,
                0x00, 0x01,
                0x00, 0x00, 0x00, 0x01,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x31, 0xEB, 0x15,
                0x00, 0x00, 0x00, 0x50,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x50,
                0x00, 0x00, 0x00, 0x00,
                0x19, 0x1E, 0x15, 0x32
            };

            // Mounted buff (Fading black horse)
            ApplySpell(client, account.ClientInstance, account.ClientInstance, 0x31EB1500); //, packetData1392);

            var packetData1431 = new byte[]
            {
                0x00, 0x00,
                0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x9E, 0x2C, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x09,
                0xAC, 0xF4, 0x00, 0x00, 0x00, 0xBA, 0x00, 0x31, 0x3C, 0x9B, 0x00, 0x00, 0x00, 0xBB, 0x00, 0x00, 0x00,
                0x64, 0x00, 0x00, 0x01, 0xF8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x01, 0xF9, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x01, 0xFA, 0x00, 0x09, 0xF4, 0x0C, 0x00, 0x00, 0x01, 0xFB, 0x00, 0x03, 0xFB, 0x88
            };
            new PacketStream() // Sit on mount (Fading black horse) (does not apply the buff)
                .WriteHeader(Sender0, Receiver0, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.SitOnMount)
                    .WriteUInt32(0x0000C350)
                    .WriteUInt32(account.ClientInstance)
                    .WriteArray(packetData1431))
                .Send(client);
        }

        private static void Send0x5D85BFC7(NetworkClient client)
        {
            var packetData80 = new byte[]
            {
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x89, 0xE8, 0xF6, 0x43, 0x25, 0x49, 0xBA,
                0x44, 0x66, 0xA4, 0xFE, 0x62, 0x00, 0x00, 0xC7, 0x9C, 0x00, 0x00, 0x0B, 0xB8, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x9C, 0x50, 0x00, 0x10, 0xF6, 0x3A, 0x00,
                0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x01, 0x00, 0x10, 0xF6, 0x3A, 0x00, 0x00,
                0xCB, 0x20, 0x41, 0x70, 0x00, 0x00, 0x3F, 0x42, 0x40, 0xA8, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox5D85BFC7)
                    .WriteArray(packetData80))
                .Send(client);
        }

        private static void SpawnPlayer(NetworkClient client, Account account)
        {
            var packetData1020 = new byte[]
            {
                0x00, 0x00,
                0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0xF6, 0xE8, 0x89, 0x44, 0x15, 0xBA, 0x49, 0x25, 0x43, 0x1D, 0xFE,
                0xA4, 0x66, 0x44, 0x12, 0x14, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x15, 0x44, 0x77, 0xF5, 0x3E, 0x1D, 0x00,
                0x00, 0x00, 0x00, 0x25, 0x40, 0xA9, 0x60, 0x3F, 0x18, 0xBA, 0xEC, 0x43, 0x05, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xC9, 0xC4, 0x00, 0x00, 0x40, 0xA4,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x29, 0x00,
                0x00, 0x00, 0x00, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x41, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x23, 0x28, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE2,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x7A, 0x00, 0x01, 0x38, 0x84, 0x00, 0x01,
                0x43, 0x10, 0x00, 0x06, 0x43, 0xEC, 0x00, 0x01, 0x39, 0x48, 0x00, 0x01, 0x38, 0xE8, 0x00, 0x01, 0x3E,
                0xC3, 0x00, 0x01, 0x48, 0x24, 0x00, 0x01, 0x48, 0x88, 0x00, 0x06, 0x42, 0x5C, 0x00, 0x01, 0x3F, 0x8C,
                0x00, 0x01, 0x43, 0x71, 0x00, 0x06, 0x41, 0xF8, 0x00, 0x01, 0x3F, 0x26, 0x00, 0x01, 0x3A, 0x11, 0x00,
                0x01, 0x43, 0xD8, 0x00, 0x01, 0x45, 0xC9, 0x00, 0x01, 0x4E, 0xC4, 0x00, 0x06, 0x45, 0x15, 0x00, 0x01,
                0x3B, 0xA0, 0x00, 0x01, 0x3C, 0x06, 0x00, 0x01, 0x41, 0x1A, 0x00, 0x01, 0x44, 0x38, 0x00, 0x01, 0x4D,
                0x98, 0x00, 0x01, 0x3C, 0x69, 0x00, 0x01, 0x42, 0x44, 0x41, 0x00, 0x00, 0x82, 0x08, 0x00, 0x00
            };

            var packetData1021 = new byte[]
            {
                0x22, 0x48, 0x08, 0x02, 0x10, 0x00, 0x18, 0x03,
                0x20, 0x65, 0x28, 0x00, 0x30, 0xAC, 0xBC, 0x0E, 0x38, 0xF4, 0xD9, 0x26, 0x40, 0x00, 0x48, 0x64, 0x50,
                0x88, 0xF7, 0x0F, 0x58, 0x8C, 0xE8, 0x27, 0x60, 0x00, 0x70, 0x64, 0x78, 0x00, 0x80, 0x01, 0x01, 0x88,
                0x01, 0xE8, 0xB7, 0x30, 0x90, 0x01, 0x50, 0x98, 0x01, 0x50, 0xA0, 0x01, 0x64, 0xA8, 0x01, 0xC8, 0x61,
                0xB0, 0x01, 0x01, 0xD0, 0x01, 0x03, 0xE8, 0x01, 0x00, 0x90, 0x02, 0x01, 0xA0, 0x02, 0x05, 0x32, 0x0C,
                0x08, 0x01, 0x10, 0xEF, 0x01, 0x18, 0x89, 0x04, 0x40, 0x20, 0x58, 0x0A, 0x3A, 0x0D, 0x08, 0xA8, 0xC8,
                0x02, 0x15, 0x00, 0x00, 0x00, 0x00, 0x18, 0x01, 0x50, 0x00, 0xA0, 0x01, 0x01, 0xA8, 0x01, 0x02, 0xBA,
                0x01, 0x57, 0x08, 0x01, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0x9B, 0x7E, 0x2C, 0xB3, 0x15, 0x3E, 0x34, 0xD2,
                0x97, 0x1D, 0x9C, 0x68, 0xBB, 0xB3, 0x25, 0x5D, 0xA4, 0xF0, 0x97, 0x12, 0x14, 0x0D, 0x9B, 0x7E, 0x2C,
                0xB3, 0x15, 0x3E, 0x34, 0xD2, 0x97, 0x1D, 0x9C, 0x68, 0xBB, 0xB3, 0x25, 0x5D, 0xA4, 0xF0, 0x97, 0x1A,
                0x14, 0x0D, 0x9B, 0x7E, 0x2C, 0xB3, 0x15, 0x3E, 0x34, 0xD2, 0x97, 0x1D, 0x9C, 0x68, 0xBB, 0xB3, 0x25,
                0x5D, 0xA4, 0xF0, 0x97, 0x25, 0x69, 0xA8, 0x39, 0x00, 0x2D, 0x69, 0xA8, 0x39, 0x00, 0x38, 0x50, 0x45,
                0x4F, 0x56, 0x55, 0x51, 0xBA, 0x01, 0x57, 0x08, 0x02, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0x22, 0x0A, 0xC6,
                0x0B, 0x15, 0x05, 0x7E, 0x88, 0x21, 0x1D, 0xC1, 0xA6, 0xF7, 0x0E, 0x25, 0x53, 0x80, 0x11, 0x5D, 0x12,
                0x14, 0x0D, 0x22, 0x0A, 0xC6, 0x0B, 0x15, 0x05, 0x7E, 0x88, 0x21, 0x1D, 0xC1, 0xA6, 0xF7, 0x0E, 0x25,
                0x53, 0x80, 0x11, 0x5D, 0x1A, 0x14, 0x0D, 0x22, 0x0A, 0xC6, 0x0B, 0x15, 0x05, 0x7E, 0x88, 0x21, 0x1D,
                0xC1, 0xA6, 0xF7, 0x0E, 0x25, 0x53, 0x80, 0x11, 0x5D, 0x25, 0x38, 0x5C, 0x03, 0x00, 0x2D, 0x38, 0x5C,
                0x03, 0x00, 0x38, 0x50, 0x45, 0x5A, 0x35, 0x55, 0x33, 0xBA, 0x01, 0x57, 0x08, 0x03, 0x12, 0x53, 0x0A,
                0x14, 0x0D, 0x1E, 0x92, 0x4F, 0x72, 0x15, 0x46, 0x6A, 0x9E, 0x58, 0x1D, 0xB2, 0xC0, 0x1C, 0x17, 0x25,
                0x13, 0xF6, 0x21, 0x7D, 0x12, 0x14, 0x0D, 0x1E, 0x92, 0x4F, 0x72, 0x15, 0x46, 0x6A, 0x9E, 0x58, 0x1D,
                0xB2, 0xC0, 0x1C, 0x17, 0x25, 0x13, 0xF6, 0x21, 0x7D, 0x1A, 0x14, 0x0D, 0x1E, 0x92, 0x4F, 0x72, 0x15,
                0x46, 0x6A, 0x9E, 0x58, 0x1D, 0xB2, 0xC0, 0x1C, 0x17, 0x25, 0x13, 0xF6, 0x21, 0x7D, 0x25, 0x1B, 0x98,
                0x03, 0x00, 0x2D, 0x1B, 0x98, 0x03, 0x00, 0x38, 0x01, 0x45, 0x51, 0x56, 0x55, 0x48, 0xBA, 0x01, 0x57,
                0x08, 0x05, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0x16, 0x46, 0x29, 0x35, 0x15, 0xC2, 0xAB, 0xA3, 0xD0, 0x1D,
                0x77, 0x91, 0x91, 0x4B, 0x25, 0xE1, 0xAE, 0xE7, 0x8B, 0x12, 0x14, 0x0D, 0x16, 0x46, 0x29, 0x35, 0x15,
                0xC2, 0xAB, 0xA3, 0xD0, 0x1D, 0x77, 0x91, 0x91, 0x4B, 0x25, 0xE1, 0xAE, 0xE7, 0x8B, 0x1A, 0x14, 0x0D,
                0x16, 0x46, 0x29, 0x35, 0x15, 0xC2, 0xAB, 0xA3, 0xD0, 0x1D, 0x77, 0x91, 0x91, 0x4B, 0x25, 0xE1, 0xAE,
                0xE7, 0x8B, 0x25, 0x19, 0x6B, 0x39, 0x00, 0x2D, 0x19, 0x6B, 0x39, 0x00, 0x38, 0x50, 0x45, 0x42, 0x51,
                0x37, 0x30, 0xBA, 0x01, 0x57, 0x08, 0x06, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0x09, 0xEF, 0x28, 0xA8, 0x15,
                0x66, 0xE4, 0x0C, 0x94, 0x1D, 0x9F, 0x1B, 0x14, 0xDE, 0x25, 0x63, 0x3E, 0x6E, 0x63, 0x12, 0x14, 0x0D,
                0x09, 0xEF, 0x28, 0xA8, 0x15, 0x66, 0xE4, 0x0C, 0x94, 0x1D, 0x9F, 0x1B, 0x14, 0xDE, 0x25, 0x63, 0x3E,
                0x6E, 0x63, 0x1A, 0x14, 0x0D, 0x09, 0xEF, 0x28, 0xA8, 0x15, 0x66, 0xE4, 0x0C, 0x94, 0x1D, 0x9F, 0x1B,
                0x14, 0xDE, 0x25, 0x63, 0x3E, 0x6E, 0x63, 0x25, 0x81, 0x08, 0x3A, 0x00, 0x2D, 0x81, 0x08, 0x3A, 0x00,
                0x38, 0x50, 0x45, 0x4E, 0x30, 0x48, 0x4F, 0xBA, 0x01, 0x57, 0x08, 0x07, 0x12, 0x53, 0x0A, 0x14, 0x0D,
                0x8E, 0x26, 0xD5, 0xDB, 0x15, 0xDE, 0x8E, 0xA2, 0xD0, 0x1D, 0xC3, 0x84, 0x5B, 0x10, 0x25, 0x9D, 0x89,
                0x37, 0x06, 0x12, 0x14, 0x0D, 0x8E, 0x26, 0xD5, 0xDB, 0x15, 0xDE, 0x8E, 0xA2, 0xD0, 0x1D, 0xC3, 0x84,
                0x5B, 0x10, 0x25, 0x9D, 0x89, 0x37, 0x06, 0x1A, 0x14, 0x0D, 0x8E, 0x26, 0xD5, 0xDB, 0x15, 0xDE, 0x8E,
                0xA2, 0xD0, 0x1D, 0xC3, 0x84, 0x5B, 0x10, 0x25, 0x9D, 0x89, 0x37, 0x06, 0x25, 0x0E, 0x6B, 0x39, 0x00,
                0x2D, 0x0E, 0x6B, 0x39, 0x00, 0x38, 0x50, 0x45, 0x58, 0x47, 0x57, 0x37, 0xBA, 0x01, 0x57, 0x08, 0x09,
                0x12, 0x53, 0x0A, 0x14, 0x0D, 0xAA, 0x35, 0xEC, 0x95, 0x15, 0x0C, 0xE6, 0xCC, 0xA7, 0x1D, 0x34, 0xB5,
                0x98, 0x51, 0x25, 0x54, 0x56, 0x31, 0xB4, 0x12, 0x14, 0x0D, 0xAA, 0x35, 0xEC, 0x95, 0x15, 0x0C, 0xE6,
                0xCC, 0xA7, 0x1D, 0x34, 0xB5, 0x98, 0x51, 0x25, 0x54, 0x56, 0x31, 0xB4, 0x1A, 0x14, 0x0D, 0xAA, 0x35,
                0xEC, 0x95, 0x15, 0x0C, 0xE6, 0xCC, 0xA7, 0x1D, 0x34, 0xB5, 0x98, 0x51, 0x25, 0x54, 0x56, 0x31, 0xB4,
                0x25, 0x4E, 0x98, 0x39, 0x00, 0x2D, 0x4E, 0x98, 0x39, 0x00, 0x38, 0x48, 0x45, 0x4F, 0x32, 0x4B, 0x50,
                0xBA, 0x01, 0x57, 0x08, 0x0A, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0x76, 0x74, 0xD4, 0x5D, 0x15, 0xD9, 0x75,
                0x8C, 0xBB, 0x1D, 0x5F, 0x57, 0x5F, 0xB5, 0x25, 0x99, 0x31, 0x4E, 0xB9, 0x12, 0x14, 0x0D, 0x76, 0x74,
                0xD4, 0x5D, 0x15, 0xD9, 0x75, 0x8C, 0xBB, 0x1D, 0x5F, 0x57, 0x5F, 0xB5, 0x25, 0x99, 0x31, 0x4E, 0xB9,
                0x1A, 0x14, 0x0D, 0x76, 0x74, 0xD4, 0x5D, 0x15, 0xD9, 0x75, 0x8C, 0xBB, 0x1D, 0x5F, 0x57, 0x5F, 0xB5,
                0x25, 0x99, 0x31, 0x4E, 0xB9, 0x25, 0x9A, 0xD0, 0x37, 0x00, 0x2D, 0x9A, 0xD0, 0x37, 0x00, 0x38, 0x3C,
                0x45, 0x4B, 0x59, 0x30, 0x4D, 0xBA, 0x01, 0x57, 0x08, 0x0B, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0x0E, 0xA7,
                0x41, 0x3F, 0x15, 0x3E, 0x80, 0x22, 0xBF, 0x1D, 0x0D, 0x53, 0x3E, 0xB6, 0x25, 0xE4, 0x2F, 0xE3, 0xE7,
                0x12, 0x14, 0x0D, 0x0E, 0xA7, 0x41, 0x3F, 0x15, 0x3E, 0x80, 0x22, 0xBF, 0x1D, 0x0D, 0x53, 0x3E, 0xB6,
                0x25, 0xE4, 0x2F, 0xE3, 0xE7, 0x1A, 0x14, 0x0D, 0x0E, 0xA7, 0x41, 0x3F, 0x15, 0x3E, 0x80, 0x22, 0xBF,
                0x1D, 0x0D, 0x53, 0x3E, 0xB6, 0x25, 0xE4, 0x2F, 0xE3, 0xE7, 0x25, 0xD9, 0xA2, 0x3B, 0x00, 0x2D, 0xD9,
                0xA2, 0x3B, 0x00, 0x38, 0x3F, 0x45, 0x49, 0x30, 0x42, 0x46, 0xBA, 0x01, 0x57, 0x08, 0x0C, 0x12, 0x53,
                0x0A, 0x14, 0x0D, 0x56, 0x9F, 0x2E, 0xAC, 0x15, 0x53, 0x10, 0x21, 0x26, 0x1D, 0x15, 0xE1, 0x0B, 0x39,
                0x25, 0x21, 0xAF, 0xDA, 0x86, 0x12, 0x14, 0x0D, 0x56, 0x9F, 0x2E, 0xAC, 0x15, 0x53, 0x10, 0x21, 0x26,
                0x1D, 0x15, 0xE1, 0x0B, 0x39, 0x25, 0x21, 0xAF, 0xDA, 0x86, 0x1A, 0x14, 0x0D, 0x56, 0x9F, 0x2E, 0xAC,
                0x15, 0x53, 0x10, 0x21, 0x26, 0x1D, 0x15, 0xE1, 0x0B, 0x39, 0x25, 0x21, 0xAF, 0xDA, 0x86, 0x25, 0x30,
                0x5C, 0x03, 0x00, 0x2D, 0x30, 0x5C, 0x03, 0x00, 0x38, 0x50, 0x45, 0x51, 0x57, 0x34, 0x39, 0xBA, 0x01,
                0x57, 0x08, 0x0E, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0x24, 0xBC, 0x8F, 0x70, 0x15, 0xFB, 0xCB, 0x09, 0x5A,
                0x1D, 0xC7, 0x8C, 0xC8, 0x07, 0x25, 0x7D, 0xD2, 0x28, 0xC6, 0x12, 0x14, 0x0D, 0x24, 0xBC, 0x8F, 0x70,
                0x15, 0xFB, 0xCB, 0x09, 0x5A, 0x1D, 0xC7, 0x8C, 0xC8, 0x07, 0x25, 0x7D, 0xD2, 0x28, 0xC6, 0x1A, 0x14,
                0x0D, 0x24, 0xBC, 0x8F, 0x70, 0x15, 0xFB, 0xCB, 0x09, 0x5A, 0x1D, 0xC7, 0x8C, 0xC8, 0x07, 0x25, 0x7D,
                0xD2, 0x28, 0xC6, 0x25, 0x3A, 0xFD, 0x39, 0x00, 0x2D, 0x3A, 0xFD, 0x39, 0x00, 0x38, 0x50, 0x45, 0x46,
                0x38, 0x43, 0x5A, 0xBA, 0x01, 0x57, 0x08, 0x0F, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0xC9, 0x13, 0xAB, 0x43,
                0x15, 0x0D, 0x49, 0xC0, 0x1D, 0x1D, 0x33, 0xBE, 0xF5, 0xCD, 0x25, 0x5A, 0x29, 0x89, 0xA7, 0x12, 0x14,
                0x0D, 0xC9, 0x13, 0xAB, 0x43, 0x15, 0x0D, 0x49, 0xC0, 0x1D, 0x1D, 0x33, 0xBE, 0xF5, 0xCD, 0x25, 0x5A,
                0x29, 0x89, 0xA7, 0x1A, 0x14, 0x0D, 0xC9, 0x13, 0xAB, 0x43, 0x15, 0x0D, 0x49, 0xC0, 0x1D, 0x1D, 0x33,
                0xBE, 0xF5, 0xCD, 0x25, 0x5A, 0x29, 0x89, 0xA7, 0x25, 0x75, 0x6B, 0x39, 0x00, 0x2D, 0x75, 0x6B, 0x39,
                0x00, 0x38, 0x50, 0x45, 0x56, 0x58, 0x47, 0x43, 0xBA, 0x01, 0x57, 0x08, 0x10, 0x12, 0x53, 0x0A, 0x14,
                0x0D, 0x41, 0x29, 0x8D, 0xBD, 0x15, 0x0D, 0x48, 0xE1, 0x1D, 0x1D, 0x4F, 0x29, 0xB3, 0x5E, 0x25, 0x2C,
                0xB0, 0x07, 0xA8, 0x12, 0x14, 0x0D, 0x41, 0x29, 0x8D, 0xBD, 0x15, 0x0D, 0x48, 0xE1, 0x1D, 0x1D, 0x4F,
                0x29, 0xB3, 0x5E, 0x25, 0x2C, 0xB0, 0x07, 0xA8, 0x1A, 0x14, 0x0D, 0x41, 0x29, 0x8D, 0xBD, 0x15, 0x0D,
                0x48, 0xE1, 0x1D, 0x1D, 0x4F, 0x29, 0xB3, 0x5E, 0x25, 0x2C, 0xB0, 0x07, 0xA8, 0x25, 0x24, 0xFD, 0x39,
                0x00, 0x2D, 0x24, 0xFD, 0x39, 0x00, 0x38, 0x50, 0x45, 0x38, 0x47, 0x4B, 0x47, 0xBA, 0x01, 0x57, 0x08,
                0x12, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0xDD, 0x31, 0xF2, 0x6E, 0x15, 0x11, 0x83, 0x8B, 0x64, 0x1D, 0x7E,
                0xFD, 0xAD, 0xA2, 0x25, 0x89, 0xAC, 0xB2, 0xA9, 0x12, 0x14, 0x0D, 0xDD, 0x31, 0xF2, 0x6E, 0x15, 0x11,
                0x83, 0x8B, 0x64, 0x1D, 0x7E, 0xFD, 0xAD, 0xA2, 0x25, 0x89, 0xAC, 0xB2, 0xA9, 0x1A, 0x14, 0x0D, 0xDD,
                0x31, 0xF2, 0x6E, 0x15, 0x11, 0x83, 0x8B, 0x64, 0x1D, 0x7E, 0xFD, 0xAD, 0xA2, 0x25, 0x89, 0xAC, 0xB2,
                0xA9, 0x25, 0x2C, 0x5C, 0x03, 0x00, 0x2D, 0x2C, 0x5C, 0x03, 0x00, 0x38, 0x50, 0x45, 0x59, 0x5A, 0x4A,
                0x32, 0xBA, 0x01, 0x58, 0x08, 0xEA, 0x07, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0xF3, 0xF5, 0x13, 0x94, 0x15,
                0xBB, 0x07, 0x2A, 0x8A, 0x1D, 0x48, 0x5C, 0xC3, 0x32, 0x25, 0xB5, 0x34, 0x41, 0x75, 0x12, 0x14, 0x0D,
                0xF3, 0xF5, 0x13, 0x94, 0x15, 0xBB, 0x07, 0x2A, 0x8A, 0x1D, 0x48, 0x5C, 0xC3, 0x32, 0x25, 0xB5, 0x34,
                0x41, 0x75, 0x1A, 0x14, 0x0D, 0xF3, 0xF5, 0x13, 0x94, 0x15, 0xBB, 0x07, 0x2A, 0x8A, 0x1D, 0x48, 0x5C,
                0xC3, 0x32, 0x25, 0xB5, 0x34, 0x41, 0x75, 0x25, 0xAD, 0x6B, 0x38, 0x00, 0x2D, 0xAD, 0x6B, 0x38, 0x00,
                0x38, 0x12, 0x45, 0x4A, 0x49, 0x56, 0x35, 0xBA, 0x01, 0x58, 0x08, 0xEF, 0x07, 0x12, 0x53, 0x0A, 0x14,
                0x0D, 0x2D, 0x59, 0x43, 0xD0, 0x15, 0x61, 0xC1, 0xFE, 0xB1, 0x1D, 0x63, 0x1C, 0x46, 0x9F, 0x25, 0x7A,
                0xAC, 0xDF, 0xAF, 0x12, 0x14, 0x0D, 0x2D, 0x59, 0x43, 0xD0, 0x15, 0x61, 0xC1, 0xFE, 0xB1, 0x1D, 0x63,
                0x1C, 0x46, 0x9F, 0x25, 0x7A, 0xAC, 0xDF, 0xAF, 0x1A, 0x14, 0x0D, 0x2D, 0x59, 0x43, 0xD0, 0x15, 0x61,
                0xC1, 0xFE, 0xB1, 0x1D, 0x63, 0x1C, 0x46, 0x9F, 0x25, 0x7A, 0xAC, 0xDF, 0xAF, 0x25, 0x4D, 0xF1, 0x37,
                0x00, 0x2D, 0x4D, 0xF1, 0x37, 0x00, 0x38, 0x01, 0x45, 0x58, 0x55, 0x54, 0x43, 0xBA, 0x01, 0x58, 0x08,
                0xF3, 0x07, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0xF5, 0xC9, 0xD6, 0x9F, 0x15, 0xAA, 0xDE, 0x30, 0x02, 0x1D,
                0x87, 0x65, 0xF5, 0xA6, 0x25, 0xB9, 0x5C, 0x84, 0x8B, 0x12, 0x14, 0x0D, 0xF5, 0xC9, 0xD6, 0x9F, 0x15,
                0xAA, 0xDE, 0x30, 0x02, 0x1D, 0x87, 0x65, 0xF5, 0xA6, 0x25, 0xB9, 0x5C, 0x84, 0x8B, 0x1A, 0x14, 0x0D,
                0xF5, 0xC9, 0xD6, 0x9F, 0x15, 0xAA, 0xDE, 0x30, 0x02, 0x1D, 0x87, 0x65, 0xF5, 0xA6, 0x25, 0xB9, 0x5C,
                0x84, 0x8B, 0x25, 0x2F, 0xB3, 0x38, 0x00, 0x2D, 0x2F, 0xB3, 0x38, 0x00, 0x38, 0x50, 0x45, 0x52, 0x4A,
                0x5A, 0x36, 0xBA, 0x01, 0x58, 0x08, 0xF6, 0x07, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0xAF, 0xA2, 0x8A, 0x94,
                0x15, 0x8B, 0x59, 0x17, 0x6C, 0x1D, 0x1A, 0xDB, 0x45, 0x8D, 0x25, 0x77, 0xE0, 0xC4, 0xC5, 0x12, 0x14,
                0x0D, 0xAF, 0xA2, 0x8A, 0x94, 0x15, 0x8B, 0x59, 0x17, 0x6C, 0x1D, 0x1A, 0xDB, 0x45, 0x8D, 0x25, 0x77,
                0xE0, 0xC4, 0xC5, 0x1A, 0x14, 0x0D, 0xAF, 0xA2, 0x8A, 0x94, 0x15, 0x8B, 0x59, 0x17, 0x6C, 0x1D, 0x1A,
                0xDB, 0x45, 0x8D, 0x25, 0x77, 0xE0, 0xC4, 0xC5, 0x25, 0x09, 0xDF, 0x4B, 0x00, 0x2D, 0x09, 0xDF, 0x4B,
                0x00, 0x38, 0x01, 0x45, 0x36, 0x41, 0x49, 0x32, 0xBA, 0x01, 0x58, 0x08, 0xFA, 0x07, 0x12, 0x53, 0x0A,
                0x14, 0x0D, 0x9F, 0x54, 0xD6, 0xFF, 0x15, 0xFF, 0x0A, 0xE3, 0x04, 0x1D, 0x43, 0x71, 0x2A, 0xB1, 0x25,
                0x29, 0xF5, 0xBB, 0x53, 0x12, 0x14, 0x0D, 0x9F, 0x54, 0xD6, 0xFF, 0x15, 0xFF, 0x0A, 0xE3, 0x04, 0x1D,
                0x43, 0x71, 0x2A, 0xB1, 0x25, 0x29, 0xF5, 0xBB, 0x53, 0x1A, 0x14, 0x0D, 0x9F, 0x54, 0xD6, 0xFF, 0x15,
                0xFF, 0x0A, 0xE3, 0x04, 0x1D, 0x43, 0x71, 0x2A, 0xB1, 0x25, 0x29, 0xF5, 0xBB, 0x53, 0x25, 0x54, 0xF3,
                0x40, 0x00, 0x2D, 0x54, 0xF3, 0x40, 0x00, 0x38, 0x01, 0x45, 0x5A, 0x53, 0x43, 0x41, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x03, 0xF1, 0x00, 0x00, 0x00, 0x0E,
                0x00, 0x00, 0x02, 0xB6, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01,
                0x27, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01, 0x85, 0x3F, 0x80,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x3F, 0x80, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0F, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
                0x00, 0x00, 0x00, 0x00, 0x01, 0xD0, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
                0x00, 0x01, 0xE4, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
                0x3C, 0x83, 0x12, 0x6F, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x3C, 0x93, 0x74,
                0xBC, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x3D, 0x2C, 0x08, 0x31, 0x00, 0x00,
                0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x3C, 0x83, 0x12, 0x6F, 0x00, 0x00, 0x00, 0x0C, 0x00,
                0x00, 0x00, 0x00, 0x01, 0x06, 0x3C, 0x83, 0x12, 0x6F, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00,
                0x01, 0x03, 0x3C, 0x93, 0x74, 0xBC, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x01, 0x05, 0x3C,
                0x83, 0x12, 0x6F, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xAD, 0x6C, 0x00, 0x00, 0x01, 0x90,
                0x00, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0x00, 0x1B, 0x5A, 0x00, 0x00, 0x00, 0x22, 0xCD, 0x00, 0x00,
                0x00, 0x35, 0x23, 0x00, 0x00, 0x00, 0x48, 0x46, 0x00, 0x00, 0x01, 0x4D, 0x1F, 0x00, 0x00, 0x01, 0x50,
                0xB8, 0x00, 0x00, 0x01, 0x51, 0xEB, 0x00, 0x00, 0x04, 0x93, 0x7D, 0x0A, 0x00, 0x04, 0x99, 0x5B, 0x00,
                0x00, 0x04, 0x9C, 0xDF, 0x00, 0x00, 0x04, 0x9E, 0x0B, 0x00, 0x00, 0x04, 0x9F, 0xFF, 0x00, 0x00, 0x04,
                0xA5, 0x77, 0x00, 0x00, 0x04, 0xA6, 0xA3, 0x00, 0x00, 0x04, 0xA7, 0x07, 0x00, 0x00, 0x04, 0xA7, 0xCE,
                0x00, 0x00, 0x04, 0xA8, 0xFB, 0x00, 0x00, 0x04, 0xAA, 0x26, 0x00, 0x00, 0x04, 0xAE, 0xD6, 0x00, 0x00,
                0x04, 0xB2, 0x5A, 0x00, 0x00, 0x04, 0xB3, 0x86, 0x00, 0x00, 0x04, 0xB4, 0xB2, 0x00, 0x00, 0x04, 0xC7,
                0x10, 0x00, 0x00, 0x04, 0xE6, 0xB2, 0x41, 0x00, 0x04, 0xE7, 0xDE, 0x42, 0x00, 0x04, 0xEE, 0x85, 0x4A,
                0x00, 0x04, 0xEE, 0xE9, 0x4B, 0x00, 0x04, 0xEF, 0x4D, 0x46, 0x00, 0x04, 0xEF, 0xB1, 0x49, 0x00, 0x04,
                0xF9, 0x70, 0x08, 0x00, 0x04, 0xFA, 0x9C, 0x08, 0x00, 0x04, 0xFB, 0xC8, 0x08, 0x00, 0x04, 0xFE, 0xEA,
                0x47, 0x00, 0x04, 0xFF, 0x51, 0x48, 0x00, 0x05, 0x04, 0xCC, 0x00, 0x00, 0x05, 0x06, 0xB8, 0x00, 0x00,
                0x05, 0x0A, 0xA0, 0x00, 0x00, 0x05, 0x0B, 0x04, 0x0A, 0x00, 0x05, 0x0E, 0x24, 0x00, 0x00, 0x15, 0xFA,
                0xF4, 0x03, 0x00, 0x16, 0x0C, 0x88, 0x00, 0x00, 0x00, 0x03, 0xF1, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
                0x00, 0x0A, 0xFF, 0xFF, 0xC7, 0xD9, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x38, 0x27, 0x00, 0x00, 0x00,
                0x1E, 0x00, 0x00, 0x27, 0x29, 0x00, 0x00, 0x00, 0x28, 0xFF, 0xFF, 0xD8, 0xD7, 0x00, 0x00, 0x00, 0x32,
                0xFF, 0xFF, 0x9D, 0x13, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x62, 0xED, 0x00, 0x00, 0x00, 0x5A, 0x00,
                0x00, 0x1F, 0x8B, 0x00, 0x00, 0x00, 0x64, 0xFF, 0xFF, 0xE0, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x03, 0xF1
            };

            new PacketStream()
                .WriteHeader(Sender0, Receiver0, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new PacketStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Spawn)
                    .WriteUInt32(0x0000C350)
                    .WriteUInt32(account.ClientInstance)
                    .WriteArray(packetData1020)
                    .WriteUInt16((short) (0x0722 + account.Character.Name.Length))
                    .WriteByte(0x0a)
                    .WriteShortString(account.Character.Name)
                    .WriteArray(packetData1021))
                .Send(client);
        }

        private static void SpawnPlayer_test(NetworkClient client, Account account)
        {
            var packetData1020 = new byte[]
            {
                0x00,
                0x00, 0x00, 0x00, 0x2B,
                0x0A,
                0x0F,
                0x0D, 0xF6, 0xE8, 0x89,
                0x44, 0x15, 0xBA, 0x49,
                0x25, 0x43, 0x1D, 0xFE,
                0xA4, 0x66, 0x44, 0x12,
                0x14, 0x0D,
                0x00,
                0x00, 0x00, 0x00, 0x15,
                0x44, 0x77, 0xF5, 0x3E,
                0x1D,
                0x00,
                0x00, 0x00, 0x00, 0x25,
                0x40, 0xA9, 0x60, 0x3F,
                0x18, 0xBA, 0xEC, 0x43,
                0x05, // m0
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00,
                0x00, 0x05, 0xC9, 0xC4,
                0x00, 0x00, 0x40, 0xA4,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x0D,
                0x00, 0x00, 0x00, 0x0A,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x04,
                0x29,
                0x00,
                0x00, 0x00, 0x00, 0x6F,
                0x00, 0x00, 0x00, 0x00,
                0x41, 0x70,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x23, 0x28,
                0x00, 0x00, 0x00, 0x0A,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x07, 0xE2,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00,
                0x66, 0x7A,
                0x00, 0x01, 0x38, 0x84,
                0x00, 0x01, 0x43, 0x10,
                0x00, 0x06, 0x43, 0xEC,
                0x00, 0x01, 0x39, 0x48,
                0x00, 0x01, 0x38, 0xE8,
                0x00, 0x01, 0x3E, 0xC3,
                0x00, 0x01, 0x48, 0x24,
                0x00, 0x01, 0x48, 0x88,
                0x00, 0x06, 0x42, 0x5C,
                0x00, 0x01, 0x3F, 0x8C,
                0x00, 0x01, 0x43, 0x71,
                0x00, 0x06, 0x41, 0xF8,
                0x00, 0x01, 0x3F, 0x26,
                0x00, 0x01, 0x3A, 0x11,
                0x00, 0x01, 0x43, 0xD8,
                0x00, 0x01, 0x45, 0xC9,
                0x00, 0x01, 0x4E, 0xC4,
                0x00, 0x06, 0x45, 0x15,
                0x00, 0x01, 0x3B, 0xA0,
                0x00, 0x01, 0x3C, 0x06,
                0x00, 0x01, 0x41, 0x1A,
                0x00, 0x01, 0x44, 0x38,
                0x00, 0x01, 0x4D, 0x98,
                0x00, 0x01, 0x3C, 0x69,
                0x00, 0x01, 0x42, 0x44,
                0x41,
                0x00, 0x00, 0x82, 0x08,
                0x00, 0x00
            };

            var packetData1021 = new byte[]
            {
                0x28, 0x00, 0x30, 0xAC, 0xBC, 0x0E, 0x38, 0xF4, 0xD9, 0x26, 0x40, 0x00, 0x48, 0x64, 0x50,
                0x88, 0xF7, 0x0F, 0x58, 0x8C, 0xE8, 0x27, 0x60, 0x00, 0x70, 0x64, 0x78, 0x00, 0x80, 0x01, 0x01, 0x88,
                0x01, 0xE8, 0xB7, 0x30, 0x90, 0x01, 0x50, 0x98, 0x01, 0x50, 0xA0, 0x01, 0x64, 0xA8, 0x01, 0xC8, 0x61,
                0xB0, 0x01, 0x01, 0xD0, 0x01, 0x03, 0xE8, 0x01, 0x00, 0x90, 0x02, 0x01, 0xA0, 0x02, 0x05, 0x32, 0x0C,
                0x08, 0x01, 0x10, 0xEF, 0x01, 0x18, 0x89, 0x04, 0x40, 0x20, 0x58, 0x0A, 0x3A, 0x0D, 0x08, 0xA8, 0xC8,
                0x02, 0x15, 0x00, 0x00, 0x00, 0x00, 0x18, 0x01, 0x50, 0x00, 0xA0, 0x01, 0x01, 0xA8, 0x01, 0x02, 0xBA,
                0x01, 0x57, 0x08, 0x01, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0x9B, 0x7E, 0x2C, 0xB3, 0x15, 0x3E, 0x34, 0xD2,
                0x97, 0x1D, 0x9C, 0x68, 0xBB, 0xB3, 0x25, 0x5D, 0xA4, 0xF0, 0x97, 0x12, 0x14, 0x0D, 0x9B, 0x7E, 0x2C,
                0xB3, 0x15, 0x3E, 0x34, 0xD2, 0x97, 0x1D, 0x9C, 0x68, 0xBB, 0xB3, 0x25, 0x5D, 0xA4, 0xF0, 0x97, 0x1A,
                0x14, 0x0D, 0x9B, 0x7E, 0x2C, 0xB3, 0x15, 0x3E, 0x34, 0xD2, 0x97, 0x1D, 0x9C, 0x68, 0xBB, 0xB3, 0x25,
                0x5D, 0xA4, 0xF0, 0x97, 0x25, 0x69, 0xA8, 0x39, 0x00, 0x2D, 0x69, 0xA8, 0x39, 0x00, 0x38, 0x50, 0x45,
                0x4F, 0x56, 0x55, 0x51, 0xBA, 0x01, 0x57, 0x08, 0x02, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0x22, 0x0A, 0xC6,
                0x0B, 0x15, 0x05, 0x7E, 0x88, 0x21, 0x1D, 0xC1, 0xA6, 0xF7, 0x0E, 0x25, 0x53, 0x80, 0x11, 0x5D, 0x12,
                0x14, 0x0D, 0x22, 0x0A, 0xC6, 0x0B, 0x15, 0x05, 0x7E, 0x88, 0x21, 0x1D, 0xC1, 0xA6, 0xF7, 0x0E, 0x25,
                0x53, 0x80, 0x11, 0x5D, 0x1A, 0x14, 0x0D, 0x22, 0x0A, 0xC6, 0x0B, 0x15, 0x05, 0x7E, 0x88, 0x21, 0x1D,
                0xC1, 0xA6, 0xF7, 0x0E, 0x25, 0x53, 0x80, 0x11, 0x5D, 0x25, 0x38, 0x5C, 0x03, 0x00, 0x2D, 0x38, 0x5C,
                0x03, 0x00, 0x38, 0x50, 0x45, 0x5A, 0x35, 0x55, 0x33, 0xBA, 0x01, 0x57, 0x08, 0x03, 0x12, 0x53, 0x0A,
                0x14, 0x0D, 0x1E, 0x92, 0x4F, 0x72, 0x15, 0x46, 0x6A, 0x9E, 0x58, 0x1D, 0xB2, 0xC0, 0x1C, 0x17, 0x25,
                0x13, 0xF6, 0x21, 0x7D, 0x12, 0x14, 0x0D, 0x1E, 0x92, 0x4F, 0x72, 0x15, 0x46, 0x6A, 0x9E, 0x58, 0x1D,
                0xB2, 0xC0, 0x1C, 0x17, 0x25, 0x13, 0xF6, 0x21, 0x7D, 0x1A, 0x14, 0x0D, 0x1E, 0x92, 0x4F, 0x72, 0x15,
                0x46, 0x6A, 0x9E, 0x58, 0x1D, 0xB2, 0xC0, 0x1C, 0x17, 0x25, 0x13, 0xF6, 0x21, 0x7D, 0x25, 0x1B, 0x98,
                0x03, 0x00, 0x2D, 0x1B, 0x98, 0x03, 0x00, 0x38, 0x01, 0x45, 0x51, 0x56, 0x55, 0x48, 0xBA, 0x01, 0x57,
                0x08, 0x05, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0x16, 0x46, 0x29, 0x35, 0x15, 0xC2, 0xAB, 0xA3, 0xD0, 0x1D,
                0x77, 0x91, 0x91, 0x4B, 0x25, 0xE1, 0xAE, 0xE7, 0x8B, 0x12, 0x14, 0x0D, 0x16, 0x46, 0x29, 0x35, 0x15,
                0xC2, 0xAB, 0xA3, 0xD0, 0x1D, 0x77, 0x91, 0x91, 0x4B, 0x25, 0xE1, 0xAE, 0xE7, 0x8B, 0x1A, 0x14, 0x0D,
                0x16, 0x46, 0x29, 0x35, 0x15, 0xC2, 0xAB, 0xA3, 0xD0, 0x1D, 0x77, 0x91, 0x91, 0x4B, 0x25, 0xE1, 0xAE,
                0xE7, 0x8B, 0x25, 0x19, 0x6B, 0x39, 0x00, 0x2D, 0x19, 0x6B, 0x39, 0x00, 0x38, 0x50, 0x45, 0x42, 0x51,
                0x37, 0x30, 0xBA, 0x01, 0x57, 0x08, 0x06, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0x09, 0xEF, 0x28, 0xA8, 0x15,
                0x66, 0xE4, 0x0C, 0x94, 0x1D, 0x9F, 0x1B, 0x14, 0xDE, 0x25, 0x63, 0x3E, 0x6E, 0x63, 0x12, 0x14, 0x0D,
                0x09, 0xEF, 0x28, 0xA8, 0x15, 0x66, 0xE4, 0x0C, 0x94, 0x1D, 0x9F, 0x1B, 0x14, 0xDE, 0x25, 0x63, 0x3E,
                0x6E, 0x63, 0x1A, 0x14, 0x0D, 0x09, 0xEF, 0x28, 0xA8, 0x15, 0x66, 0xE4, 0x0C, 0x94, 0x1D, 0x9F, 0x1B,
                0x14, 0xDE, 0x25, 0x63, 0x3E, 0x6E, 0x63, 0x25, 0x81, 0x08, 0x3A, 0x00, 0x2D, 0x81, 0x08, 0x3A, 0x00,
                0x38, 0x50, 0x45, 0x4E, 0x30, 0x48, 0x4F, 0xBA, 0x01, 0x57, 0x08, 0x07, 0x12, 0x53, 0x0A, 0x14, 0x0D,
                0x8E, 0x26, 0xD5, 0xDB, 0x15, 0xDE, 0x8E, 0xA2, 0xD0, 0x1D, 0xC3, 0x84, 0x5B, 0x10, 0x25, 0x9D, 0x89,
                0x37, 0x06, 0x12, 0x14, 0x0D, 0x8E, 0x26, 0xD5, 0xDB, 0x15, 0xDE, 0x8E, 0xA2, 0xD0, 0x1D, 0xC3, 0x84,
                0x5B, 0x10, 0x25, 0x9D, 0x89, 0x37, 0x06, 0x1A, 0x14, 0x0D, 0x8E, 0x26, 0xD5, 0xDB, 0x15, 0xDE, 0x8E,
                0xA2, 0xD0, 0x1D, 0xC3, 0x84, 0x5B, 0x10, 0x25, 0x9D, 0x89, 0x37, 0x06, 0x25, 0x0E, 0x6B, 0x39, 0x00,
                0x2D, 0x0E, 0x6B, 0x39, 0x00, 0x38, 0x50, 0x45, 0x58, 0x47, 0x57, 0x37, 0xBA, 0x01, 0x57, 0x08, 0x09,
                0x12, 0x53, 0x0A, 0x14, 0x0D, 0xAA, 0x35, 0xEC, 0x95, 0x15, 0x0C, 0xE6, 0xCC, 0xA7, 0x1D, 0x34, 0xB5,
                0x98, 0x51, 0x25, 0x54, 0x56, 0x31, 0xB4, 0x12, 0x14, 0x0D, 0xAA, 0x35, 0xEC, 0x95, 0x15, 0x0C, 0xE6,
                0xCC, 0xA7, 0x1D, 0x34, 0xB5, 0x98, 0x51, 0x25, 0x54, 0x56, 0x31, 0xB4, 0x1A, 0x14, 0x0D, 0xAA, 0x35,
                0xEC, 0x95, 0x15, 0x0C, 0xE6, 0xCC, 0xA7, 0x1D, 0x34, 0xB5, 0x98, 0x51, 0x25, 0x54, 0x56, 0x31, 0xB4,
                0x25, 0x4E, 0x98, 0x39, 0x00, 0x2D, 0x4E, 0x98, 0x39, 0x00, 0x38, 0x48, 0x45, 0x4F, 0x32, 0x4B, 0x50,
                0xBA, 0x01, 0x57, 0x08, 0x0A, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0x76, 0x74, 0xD4, 0x5D, 0x15, 0xD9, 0x75,
                0x8C, 0xBB, 0x1D, 0x5F, 0x57, 0x5F, 0xB5, 0x25, 0x99, 0x31, 0x4E, 0xB9, 0x12, 0x14, 0x0D, 0x76, 0x74,
                0xD4, 0x5D, 0x15, 0xD9, 0x75, 0x8C, 0xBB, 0x1D, 0x5F, 0x57, 0x5F, 0xB5, 0x25, 0x99, 0x31, 0x4E, 0xB9,
                0x1A, 0x14, 0x0D, 0x76, 0x74, 0xD4, 0x5D, 0x15, 0xD9, 0x75, 0x8C, 0xBB, 0x1D, 0x5F, 0x57, 0x5F, 0xB5,
                0x25, 0x99, 0x31, 0x4E, 0xB9, 0x25, 0x9A, 0xD0, 0x37, 0x00, 0x2D, 0x9A, 0xD0, 0x37, 0x00, 0x38, 0x3C,
                0x45, 0x4B, 0x59, 0x30, 0x4D, 0xBA, 0x01, 0x57, 0x08, 0x0B, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0x0E, 0xA7,
                0x41, 0x3F, 0x15, 0x3E, 0x80, 0x22, 0xBF, 0x1D, 0x0D, 0x53, 0x3E, 0xB6, 0x25, 0xE4, 0x2F, 0xE3, 0xE7,
                0x12, 0x14, 0x0D, 0x0E, 0xA7, 0x41, 0x3F, 0x15, 0x3E, 0x80, 0x22, 0xBF, 0x1D, 0x0D, 0x53, 0x3E, 0xB6,
                0x25, 0xE4, 0x2F, 0xE3, 0xE7, 0x1A, 0x14, 0x0D, 0x0E, 0xA7, 0x41, 0x3F, 0x15, 0x3E, 0x80, 0x22, 0xBF,
                0x1D, 0x0D, 0x53, 0x3E, 0xB6, 0x25, 0xE4, 0x2F, 0xE3, 0xE7, 0x25, 0xD9, 0xA2, 0x3B, 0x00, 0x2D, 0xD9,
                0xA2, 0x3B, 0x00, 0x38, 0x3F, 0x45, 0x49, 0x30, 0x42, 0x46, 0xBA, 0x01, 0x57, 0x08, 0x0C, 0x12, 0x53,
                0x0A, 0x14, 0x0D, 0x56, 0x9F, 0x2E, 0xAC, 0x15, 0x53, 0x10, 0x21, 0x26, 0x1D, 0x15, 0xE1, 0x0B, 0x39,
                0x25, 0x21, 0xAF, 0xDA, 0x86, 0x12, 0x14, 0x0D, 0x56, 0x9F, 0x2E, 0xAC, 0x15, 0x53, 0x10, 0x21, 0x26,
                0x1D, 0x15, 0xE1, 0x0B, 0x39, 0x25, 0x21, 0xAF, 0xDA, 0x86, 0x1A, 0x14, 0x0D, 0x56, 0x9F, 0x2E, 0xAC,
                0x15, 0x53, 0x10, 0x21, 0x26, 0x1D, 0x15, 0xE1, 0x0B, 0x39, 0x25, 0x21, 0xAF, 0xDA, 0x86, 0x25, 0x30,
                0x5C, 0x03, 0x00, 0x2D, 0x30, 0x5C, 0x03, 0x00, 0x38, 0x50, 0x45, 0x51, 0x57, 0x34, 0x39, 0xBA, 0x01,
                0x57, 0x08, 0x0E, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0x24, 0xBC, 0x8F, 0x70, 0x15, 0xFB, 0xCB, 0x09, 0x5A,
                0x1D, 0xC7, 0x8C, 0xC8, 0x07, 0x25, 0x7D, 0xD2, 0x28, 0xC6, 0x12, 0x14, 0x0D, 0x24, 0xBC, 0x8F, 0x70,
                0x15, 0xFB, 0xCB, 0x09, 0x5A, 0x1D, 0xC7, 0x8C, 0xC8, 0x07, 0x25, 0x7D, 0xD2, 0x28, 0xC6, 0x1A, 0x14,
                0x0D, 0x24, 0xBC, 0x8F, 0x70, 0x15, 0xFB, 0xCB, 0x09, 0x5A, 0x1D, 0xC7, 0x8C, 0xC8, 0x07, 0x25, 0x7D,
                0xD2, 0x28, 0xC6, 0x25, 0x3A, 0xFD, 0x39, 0x00, 0x2D, 0x3A, 0xFD, 0x39, 0x00, 0x38, 0x50, 0x45, 0x46,
                0x38, 0x43, 0x5A, 0xBA, 0x01, 0x57, 0x08, 0x0F, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0xC9, 0x13, 0xAB, 0x43,
                0x15, 0x0D, 0x49, 0xC0, 0x1D, 0x1D, 0x33, 0xBE, 0xF5, 0xCD, 0x25, 0x5A, 0x29, 0x89, 0xA7, 0x12, 0x14,
                0x0D, 0xC9, 0x13, 0xAB, 0x43, 0x15, 0x0D, 0x49, 0xC0, 0x1D, 0x1D, 0x33, 0xBE, 0xF5, 0xCD, 0x25, 0x5A,
                0x29, 0x89, 0xA7, 0x1A, 0x14, 0x0D, 0xC9, 0x13, 0xAB, 0x43, 0x15, 0x0D, 0x49, 0xC0, 0x1D, 0x1D, 0x33,
                0xBE, 0xF5, 0xCD, 0x25, 0x5A, 0x29, 0x89, 0xA7, 0x25, 0x75, 0x6B, 0x39, 0x00, 0x2D, 0x75, 0x6B, 0x39,
                0x00, 0x38, 0x50, 0x45, 0x56, 0x58, 0x47, 0x43, 0xBA, 0x01, 0x57, 0x08, 0x10, 0x12, 0x53, 0x0A, 0x14,
                0x0D, 0x41, 0x29, 0x8D, 0xBD, 0x15, 0x0D, 0x48, 0xE1, 0x1D, 0x1D, 0x4F, 0x29, 0xB3, 0x5E, 0x25, 0x2C,
                0xB0, 0x07, 0xA8, 0x12, 0x14, 0x0D, 0x41, 0x29, 0x8D, 0xBD, 0x15, 0x0D, 0x48, 0xE1, 0x1D, 0x1D, 0x4F,
                0x29, 0xB3, 0x5E, 0x25, 0x2C, 0xB0, 0x07, 0xA8, 0x1A, 0x14, 0x0D, 0x41, 0x29, 0x8D, 0xBD, 0x15, 0x0D,
                0x48, 0xE1, 0x1D, 0x1D, 0x4F, 0x29, 0xB3, 0x5E, 0x25, 0x2C, 0xB0, 0x07, 0xA8, 0x25, 0x24, 0xFD, 0x39,
                0x00, 0x2D, 0x24, 0xFD, 0x39, 0x00, 0x38, 0x50, 0x45, 0x38, 0x47, 0x4B, 0x47, 0xBA, 0x01, 0x57, 0x08,
                0x12, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0xDD, 0x31, 0xF2, 0x6E, 0x15, 0x11, 0x83, 0x8B, 0x64, 0x1D, 0x7E,
                0xFD, 0xAD, 0xA2, 0x25, 0x89, 0xAC, 0xB2, 0xA9, 0x12, 0x14, 0x0D, 0xDD, 0x31, 0xF2, 0x6E, 0x15, 0x11,
                0x83, 0x8B, 0x64, 0x1D, 0x7E, 0xFD, 0xAD, 0xA2, 0x25, 0x89, 0xAC, 0xB2, 0xA9, 0x1A, 0x14, 0x0D, 0xDD,
                0x31, 0xF2, 0x6E, 0x15, 0x11, 0x83, 0x8B, 0x64, 0x1D, 0x7E, 0xFD, 0xAD, 0xA2, 0x25, 0x89, 0xAC, 0xB2,
                0xA9, 0x25, 0x2C, 0x5C, 0x03, 0x00, 0x2D, 0x2C, 0x5C, 0x03, 0x00, 0x38, 0x50, 0x45, 0x59, 0x5A, 0x4A,
                0x32, 0xBA, 0x01, 0x58, 0x08, 0xEA, 0x07, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0xF3, 0xF5, 0x13, 0x94, 0x15,
                0xBB, 0x07, 0x2A, 0x8A, 0x1D, 0x48, 0x5C, 0xC3, 0x32, 0x25, 0xB5, 0x34, 0x41, 0x75, 0x12, 0x14, 0x0D,
                0xF3, 0xF5, 0x13, 0x94, 0x15, 0xBB, 0x07, 0x2A, 0x8A, 0x1D, 0x48, 0x5C, 0xC3, 0x32, 0x25, 0xB5, 0x34,
                0x41, 0x75, 0x1A, 0x14, 0x0D, 0xF3, 0xF5, 0x13, 0x94, 0x15, 0xBB, 0x07, 0x2A, 0x8A, 0x1D, 0x48, 0x5C,
                0xC3, 0x32, 0x25, 0xB5, 0x34, 0x41, 0x75, 0x25, 0xAD, 0x6B, 0x38, 0x00, 0x2D, 0xAD, 0x6B, 0x38, 0x00,
                0x38, 0x12, 0x45, 0x4A, 0x49, 0x56, 0x35, 0xBA, 0x01, 0x58, 0x08, 0xEF, 0x07, 0x12, 0x53, 0x0A, 0x14,
                0x0D, 0x2D, 0x59, 0x43, 0xD0, 0x15, 0x61, 0xC1, 0xFE, 0xB1, 0x1D, 0x63, 0x1C, 0x46, 0x9F, 0x25, 0x7A,
                0xAC, 0xDF, 0xAF, 0x12, 0x14, 0x0D, 0x2D, 0x59, 0x43, 0xD0, 0x15, 0x61, 0xC1, 0xFE, 0xB1, 0x1D, 0x63,
                0x1C, 0x46, 0x9F, 0x25, 0x7A, 0xAC, 0xDF, 0xAF, 0x1A, 0x14, 0x0D, 0x2D, 0x59, 0x43, 0xD0, 0x15, 0x61,
                0xC1, 0xFE, 0xB1, 0x1D, 0x63, 0x1C, 0x46, 0x9F, 0x25, 0x7A, 0xAC, 0xDF, 0xAF, 0x25, 0x4D, 0xF1, 0x37,
                0x00, 0x2D, 0x4D, 0xF1, 0x37, 0x00, 0x38, 0x01, 0x45, 0x58, 0x55, 0x54, 0x43, 0xBA, 0x01, 0x58, 0x08,
                0xF3, 0x07, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0xF5, 0xC9, 0xD6, 0x9F, 0x15, 0xAA, 0xDE, 0x30, 0x02, 0x1D,
                0x87, 0x65, 0xF5, 0xA6, 0x25, 0xB9, 0x5C, 0x84, 0x8B, 0x12, 0x14, 0x0D, 0xF5, 0xC9, 0xD6, 0x9F, 0x15,
                0xAA, 0xDE, 0x30, 0x02, 0x1D, 0x87, 0x65, 0xF5, 0xA6, 0x25, 0xB9, 0x5C, 0x84, 0x8B, 0x1A, 0x14, 0x0D,
                0xF5, 0xC9, 0xD6, 0x9F, 0x15, 0xAA, 0xDE, 0x30, 0x02, 0x1D, 0x87, 0x65, 0xF5, 0xA6, 0x25, 0xB9, 0x5C,
                0x84, 0x8B, 0x25, 0x2F, 0xB3, 0x38, 0x00, 0x2D, 0x2F, 0xB3, 0x38, 0x00, 0x38, 0x50, 0x45, 0x52, 0x4A,
                0x5A, 0x36, 0xBA, 0x01, 0x58, 0x08, 0xF6, 0x07, 0x12, 0x53, 0x0A, 0x14, 0x0D, 0xAF, 0xA2, 0x8A, 0x94,
                0x15, 0x8B, 0x59, 0x17, 0x6C, 0x1D, 0x1A, 0xDB, 0x45, 0x8D, 0x25, 0x77, 0xE0, 0xC4, 0xC5, 0x12, 0x14,
                0x0D, 0xAF, 0xA2, 0x8A, 0x94, 0x15, 0x8B, 0x59, 0x17, 0x6C, 0x1D, 0x1A, 0xDB, 0x45, 0x8D, 0x25, 0x77,
                0xE0, 0xC4, 0xC5, 0x1A, 0x14, 0x0D, 0xAF, 0xA2, 0x8A, 0x94, 0x15, 0x8B, 0x59, 0x17, 0x6C, 0x1D, 0x1A,
                0xDB, 0x45, 0x8D, 0x25, 0x77, 0xE0, 0xC4, 0xC5, 0x25, 0x09, 0xDF, 0x4B, 0x00, 0x2D, 0x09, 0xDF, 0x4B,
                0x00, 0x38, 0x01, 0x45, 0x36, 0x41, 0x49, 0x32, 0xBA, 0x01, 0x58, 0x08, 0xFA, 0x07, 0x12, 0x53, 0x0A,
                0x14, 0x0D, 0x9F, 0x54, 0xD6, 0xFF, 0x15, 0xFF, 0x0A, 0xE3, 0x04, 0x1D, 0x43, 0x71, 0x2A, 0xB1, 0x25,
                0x29, 0xF5, 0xBB, 0x53, 0x12, 0x14, 0x0D, 0x9F, 0x54, 0xD6, 0xFF, 0x15, 0xFF, 0x0A, 0xE3, 0x04, 0x1D,
                0x43, 0x71, 0x2A, 0xB1, 0x25, 0x29, 0xF5, 0xBB, 0x53, 0x1A, 0x14, 0x0D, 0x9F, 0x54, 0xD6, 0xFF, 0x15,
                0xFF, 0x0A, 0xE3, 0x04, 0x1D, 0x43, 0x71, 0x2A, 0xB1, 0x25, 0x29, 0xF5, 0xBB, 0x53, 0x25, 0x54, 0xF3,
                0x40, 0x00, 0x2D, 0x54, 0xF3, 0x40, 0x00, 0x38, 0x01, 0x45, 0x5A, 0x53, 0x43, 0x41, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x03, 0xF1, 0x00, 0x00, 0x00, 0x0E,
                0x00, 0x00, 0x02, 0xB6, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01,
                0x27, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01, 0x85, 0x3F, 0x80,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x3F, 0x80, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0F, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
                0x00, 0x00, 0x00, 0x00, 0x01, 0xD0, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
                0x00, 0x01, 0xE4, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
                0x3C, 0x83, 0x12, 0x6F, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x3C, 0x93, 0x74,
                0xBC, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x3D, 0x2C, 0x08, 0x31, 0x00, 0x00,
                0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x3C, 0x83, 0x12, 0x6F, 0x00, 0x00, 0x00, 0x0C, 0x00,
                0x00, 0x00, 0x00, 0x01, 0x06, 0x3C, 0x83, 0x12, 0x6F, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00,
                0x01, 0x03, 0x3C, 0x93, 0x74, 0xBC, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x01, 0x05, 0x3C,
                0x83, 0x12, 0x6F, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xAD, 0x6C, 0x00, 0x00, 0x01, 0x90,
                0x00, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0x00, 0x1B, 0x5A, 0x00, 0x00, 0x00, 0x22, 0xCD, 0x00, 0x00,
                0x00, 0x35, 0x23, 0x00, 0x00, 0x00, 0x48, 0x46, 0x00, 0x00, 0x01, 0x4D, 0x1F, 0x00, 0x00, 0x01, 0x50,
                0xB8, 0x00, 0x00, 0x01, 0x51, 0xEB, 0x00, 0x00, 0x04, 0x93, 0x7D, 0x0A, 0x00, 0x04, 0x99, 0x5B, 0x00,
                0x00, 0x04, 0x9C, 0xDF, 0x00, 0x00, 0x04, 0x9E, 0x0B, 0x00, 0x00, 0x04, 0x9F, 0xFF, 0x00, 0x00, 0x04,
                0xA5, 0x77, 0x00, 0x00, 0x04, 0xA6, 0xA3, 0x00, 0x00, 0x04, 0xA7, 0x07, 0x00, 0x00, 0x04, 0xA7, 0xCE,
                0x00, 0x00, 0x04, 0xA8, 0xFB, 0x00, 0x00, 0x04, 0xAA, 0x26, 0x00, 0x00, 0x04, 0xAE, 0xD6, 0x00,
                0x00, 0x04, 0xB2, 0x5A,
                0x00,
                0x00, 0x04, 0xB3, 0x86,
                0x00,
                0x00, 0x04, 0xB4, 0xB2,
                0x00,
                0x00, 0x04, 0xC7, 0x10,
                0x00,
                0x00, 0x04, 0xE6, 0xB2,
                0x41,
                0x00, 0x04, 0xE7, 0xDE,
                0x42,
                0x00, 0x04, 0xEE, 0x85,
                0x4A,
                0x00, 0x04, 0xEE, 0xE9,
                0x4B,
                0x00, 0x04, 0xEF, 0x4D,
                0x46,
                0x00, 0x04, 0xEF, 0xB1,
                0x49,
                0x00, 0x04, 0xF9, 0x70,
                0x08,
                0x00, 0x04, 0xFA, 0x9C,
                0x08,
                0x00, 0x04, 0xFB, 0xC8,
                0x08,
                0x00, 0x04, 0xFE, 0xEA,
                0x47,
                0x00, 0x04, 0xFF, 0x51,
                0x48,
                0x00, 0x05, 0x04, 0xCC,
                0x00, 0x00,
                0x05, 0x06,
                0xB8, 0x00,
                0x00, 0x05, 0x0A, 0xA0,
                0x00, 0x00,
                0x05, 0x0B, 0x04, 0x0A,
                0x00, 0x05, 0x0E, 0x24,
                0x00, 0x00,
                0x15, 0xFA, 0xF4, 0x03,
                0x00, 0x16, 0x0C, 0x88,
                0x00,
                0x00, 0x00, 0x03, 0xF1,
                0x00, 0x00, 0x00, 0x08,
                0x00, 0x00, 0x00, 0x0A,
                0xFF, 0xFF, 0xC7, 0xD9,
                0x00, 0x00, 0x00, 0x14,
                0x00, 0x00, 0x38, 0x27,
                0x00, 0x00, 0x00, 0x1E,
                0x00, 0x00, 0x27, 0x29,
                0x00, 0x00, 0x00, 0x28,
                0xFF, 0xFF, 0xD8, 0xD7,
                0x00, 0x00, 0x00, 0x32,
                0xFF, 0xFF, 0x9D, 0x13,
                0x00, 0x00, 0x00, 0x3C,
                0x00, 0x00, 0x62, 0xED,
                0x00, 0x00, 0x00, 0x5A,
                0x00, 0x00, 0x1F, 0x8B,
                0x00, 0x00, 0x00, 0x64,
                0xFF, 0xFF, 0xE0, 0x75,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x03, 0xF1
            };

            new PacketStream()
                .WriteHeader(Sender0, Receiver0, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new PacketStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Spawn)
                    .WriteUInt32(0x0000C350)
                    .WriteUInt32(account.ClientInstance)
                    .WriteArray(packetData1020)
                    .WriteUInt16((short) (0x0722 + account.Character.Name.Length))
                    .WriteByte(0x0a)
                    .WriteShortString(account.Character.Name)
                    .WriteUInt16(0x2248)
                    .WriteByte(0x08)
                    .WriteByte(account.Character.Sex)
                    .WriteUInt16(0x1000)
                    .WriteByte(0x18)
                    .WriteByte(0x01) // skin colour?
                    .WriteByte(0x20)
                    .WriteByte(0x65) // char size ?
                    .WriteArray(packetData1021))
                .Send(client);
        }

        private void Send0x33A56FB0(NetworkClient client)
        {
            var packetData81 = new byte[]
            {
                0x00, 0x00, 0xC7, 0x48, 0x00, 0x00, 0x08, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0x00,
                0x80,
                0x93, 0x44, 0x15, 0x00, 0x00, 0x20, 0x43, 0x1D, 0x00, 0x00, 0x5A, 0x44, 0x12, 0x14, 0x0D, 0x00, 0x00,
                0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x80, 0x3F,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0x94, 0x08, 0x00, 0x12, 0x1E, 0x54, 0x68, 0x72, 0x61, 0x73,
                0x68, 0x69, 0x6E, 0x67, 0x20, 0x53, 0x74, 0x65, 0x65, 0x6C, 0x2D, 0x73, 0x74, 0x75, 0x64, 0x64, 0x65,
                0x64, 0x20, 0x47, 0x6C, 0x6F, 0x76, 0x65, 0x73, 0x1A, 0x63, 0x3C, 0x72, 0x65, 0x6D, 0x6F, 0x74, 0x65,
                0x66, 0x6F, 0x72, 0x6D, 0x61, 0x74, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x33, 0x37, 0x36, 0x33, 0x38, 0x35,
                0x37, 0x22, 0x20, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35, 0x30, 0x32, 0x30,
                0x30, 0x22, 0x20, 0x6B, 0x65, 0x79, 0x3D, 0x22, 0x30, 0x49, 0x76, 0x58, 0x71, 0x66, 0x7A, 0x63, 0x68,
                0x38, 0x41, 0x3F, 0x73, 0x70, 0x34, 0x4C, 0x68, 0x2F, 0x59, 0x25, 0x22, 0x20, 0x6B, 0x6E, 0x75, 0x62,
                0x6F, 0x74, 0x3D, 0x22, 0x30, 0x22, 0x20, 0x20, 0x3E, 0x3C, 0x2F, 0x72, 0x65, 0x6D, 0x6F, 0x74, 0x65,
                0x66, 0x6F, 0x72, 0x6D, 0x61, 0x74, 0x3E, 0x28, 0x05, 0x38, 0xC8, 0x8E, 0x03, 0x40, 0x91, 0xDD, 0xE5,
                0x01, 0x60, 0x01, 0x00, 0x41, 0xCB, 0xF4, 0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0xBE, 0x64, 0x0C, 0x0E, 0xBC, 0xCD, 0x17, 0xB8, 0xBD, 0x1F, 0x58, 0x5E, 0x3E, 0x63, 0x81,
                0x1D, 0x3E, 0xD6, 0xCB, 0x62, 0x3C, 0xE0, 0x27, 0xFB, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox33A56FB0)
                    .WriteArray(packetData81))
                .Send(client);

            var packetData82 = new byte[]
            {
                0x00, 0x00, 0xC7, 0x48, 0x00, 0x00, 0x08, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0x00,
                0x60,
                0x95, 0x44, 0x15, 0x00, 0x00, 0x20, 0x43, 0x1D, 0x00, 0xC0, 0x50, 0x44, 0x12, 0x14, 0x0D, 0x00, 0x00,
                0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x80, 0x3F,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0x94, 0x08, 0x00, 0x12, 0x1E, 0x54, 0x68, 0x72, 0x61, 0x73,
                0x68, 0x69, 0x6E, 0x67, 0x20, 0x53, 0x74, 0x65, 0x65, 0x6C, 0x2D, 0x73, 0x74, 0x75, 0x64, 0x64, 0x65,
                0x64, 0x20, 0x47, 0x6C, 0x6F, 0x76, 0x65, 0x73, 0x1A, 0x63, 0x3C, 0x72, 0x65, 0x6D, 0x6F, 0x74, 0x65,
                0x66, 0x6F, 0x72, 0x6D, 0x61, 0x74, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x33, 0x37, 0x36, 0x33, 0x38, 0x35,
                0x37, 0x22, 0x20, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35, 0x30, 0x32, 0x30,
                0x30, 0x22, 0x20, 0x6B, 0x65, 0x79, 0x3D, 0x22, 0x30, 0x49, 0x76, 0x58, 0x71, 0x66, 0x7A, 0x63, 0x68,
                0x38, 0x41, 0x3F, 0x73, 0x70, 0x34, 0x4C, 0x68, 0x2F, 0x59, 0x25, 0x22, 0x20, 0x6B, 0x6E, 0x75, 0x62,
                0x6F, 0x74, 0x3D, 0x22, 0x30, 0x22, 0x20, 0x20, 0x3E, 0x3C, 0x2F, 0x72, 0x65, 0x6D, 0x6F, 0x74, 0x65,
                0x66, 0x6F, 0x72, 0x6D, 0x61, 0x74, 0x3E, 0x28, 0x05, 0x38, 0xC8, 0x8E, 0x03, 0x40, 0x91, 0xDD, 0xE5,
                0x01, 0x60, 0x01, 0x00, 0x41, 0xCB, 0xF4, 0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0xBE, 0x64, 0x0C, 0x0E, 0xBC, 0xCD, 0x17, 0xB8, 0xBD, 0x1F, 0x58, 0x5E, 0x3E, 0x63, 0x81,
                0x1D, 0x3E, 0xD6, 0xCB, 0x62, 0x3C, 0xE0, 0x27, 0xFB, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox33A56FB0)
                    .WriteArray(packetData82))
                .Send(client);

            var packetData85 = new byte[]
            {
                0x00, 0x00, 0xC7, 0x48, 0x00, 0x00, 0x08, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0x3D,
                0x16,
                0x7C, 0x44, 0x15, 0xB9, 0x3C, 0x21, 0x43, 0x1D, 0x2D, 0xEE, 0x95, 0x44, 0x12, 0x14, 0x0D, 0x00, 0x00,
                0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x80, 0x3F,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0x94, 0x08, 0x00, 0x12, 0x1E, 0x54, 0x68, 0x72, 0x61, 0x73,
                0x68, 0x69, 0x6E, 0x67, 0x20, 0x53, 0x74, 0x65, 0x65, 0x6C, 0x2D, 0x73, 0x74, 0x75, 0x64, 0x64, 0x65,
                0x64, 0x20, 0x47, 0x6C, 0x6F, 0x76, 0x65, 0x73, 0x1A, 0x63, 0x3C, 0x72, 0x65, 0x6D, 0x6F, 0x74, 0x65,
                0x66, 0x6F, 0x72, 0x6D, 0x61, 0x74, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x33, 0x37, 0x36, 0x33, 0x38, 0x35,
                0x37, 0x22, 0x20, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35, 0x30, 0x32, 0x30,
                0x30, 0x22, 0x20, 0x6B, 0x65, 0x79, 0x3D, 0x22, 0x30, 0x49, 0x76, 0x58, 0x71, 0x66, 0x7A, 0x63, 0x68,
                0x38, 0x41, 0x3F, 0x73, 0x70, 0x34, 0x4C, 0x68, 0x2F, 0x59, 0x25, 0x22, 0x20, 0x6B, 0x6E, 0x75, 0x62,
                0x6F, 0x74, 0x3D, 0x22, 0x30, 0x22, 0x20, 0x20, 0x3E, 0x3C, 0x2F, 0x72, 0x65, 0x6D, 0x6F, 0x74, 0x65,
                0x66, 0x6F, 0x72, 0x6D, 0x61, 0x74, 0x3E, 0x28, 0x05, 0x38, 0xC8, 0x8E, 0x03, 0x40, 0x91, 0xDD, 0xE5,
                0x01, 0x60, 0x01, 0x00, 0x02, 0x47, 0xA8, 0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0xBD, 0x3E, 0x44, 0x90, 0xBD, 0x3A, 0x61, 0x42, 0xBC, 0x00, 0x1D, 0x52, 0x3D, 0x38, 0x53,
                0xFB, 0x3D, 0x3B, 0x43, 0x62, 0x3B, 0xE4, 0x60, 0xF4, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox33A56FB0)
                    .WriteArray(packetData85))
                .Send(client);

            var packetData86 = new byte[]
            {
                0x00, 0x00, 0xC7, 0x48, 0x00, 0x00, 0x08, 0xCA, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0xAE,
                0x2E,
                0x75, 0x44, 0x15, 0x15, 0x6A, 0x27, 0x43, 0x1D, 0x2D, 0x45, 0x95, 0x44, 0x12, 0x14, 0x0D, 0x1A, 0x89,
                0xD0, 0x3B, 0x15, 0x0D, 0x33, 0xC4, 0x3E, 0x1D, 0xA5, 0x32, 0x45, 0xBB, 0x25, 0x8A, 0x73, 0x6C, 0x3F,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0x64, 0x08, 0xE7, 0xCB, 0x0D, 0x12, 0x06, 0x41, 0x72, 0x6D,
                0x6F, 0x72, 0x79, 0x1A, 0x4E, 0x3C, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x69, 0x7A, 0x65, 0x64, 0x20, 0x69,
                0x64, 0x3D, 0x22, 0x33, 0x38, 0x37, 0x33, 0x32, 0x31, 0x38, 0x22, 0x20, 0x63, 0x61, 0x74, 0x65, 0x67,
                0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35, 0x35, 0x30, 0x30, 0x30, 0x22, 0x20, 0x66, 0x6C, 0x61, 0x67, 0x73,
                0x3D, 0x22, 0x22, 0x20, 0x6B, 0x65, 0x79, 0x3D, 0x22, 0x33, 0x69, 0x35, 0x59, 0x4D, 0x28, 0x47, 0x47,
                0x42, 0x50, 0x59, 0x38, 0x2A, 0x4D, 0x76, 0x3F, 0x28, 0x70, 0x5B, 0x37, 0x22, 0x20, 0x3E, 0x28, 0x01,
                0x38, 0xC8, 0x8E, 0x03, 0x60, 0x01, 0x00, 0x03, 0x65, 0xE4, 0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x01, 0xA3, 0x44, 0x3E, 0x41, 0x4C, 0xCB, 0xC0, 0x18, 0xE1, 0xAD,
                0x41, 0x0D, 0x88, 0x36, 0x41, 0x92, 0xAC, 0x3F, 0xBE, 0xE8, 0x63, 0x18, 0x3E, 0x4C, 0xCC, 0xCD, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox33A56FB0)
                    .WriteArray(packetData86))
                .Send(client);

            var packetData92 = new byte[]
            {
                0x00, 0x00, 0xC7, 0x48, 0x00, 0x00, 0x08, 0xC9, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0x6A,
                0x5C,
                0x66, 0x44, 0x15, 0xE3, 0xE5, 0x2C, 0x43, 0x1D, 0xEC, 0x41, 0x84, 0x44, 0x12, 0x14, 0x0D, 0x00, 0x00,
                0x00, 0x00, 0x15, 0xA2, 0x45, 0x26, 0x3E, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x25, 0x46, 0x9A, 0x7C, 0x3F,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0x84, 0x08, 0xD2, 0xFE, 0x0D, 0x12, 0x12, 0x53, 0x65, 0x72,
                0x70, 0x65, 0x6E, 0x74, 0x27, 0x73, 0x20, 0x48, 0x65, 0x61, 0x64, 0x20, 0x49, 0x6E, 0x6E, 0x1A, 0x62,
                0x3C, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x69, 0x7A, 0x65, 0x64, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x37, 0x30,
                0x34, 0x31, 0x35, 0x33, 0x22, 0x20, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35,
                0x35, 0x30, 0x30, 0x30, 0x22, 0x20, 0x66, 0x6C, 0x61, 0x67, 0x73, 0x3D, 0x22, 0x22, 0x20, 0x6B, 0x65,
                0x79, 0x3D, 0x22, 0x26, 0x23, 0x39, 0x32, 0x3B, 0x5E, 0x26, 0x23, 0x39, 0x32, 0x3B, 0x4D, 0x65, 0x2F,
                0x5E, 0x2C, 0x26, 0x71, 0x75, 0x6F, 0x74, 0x3B, 0x26, 0x23, 0x33, 0x36, 0x3B, 0x48, 0x41, 0x39, 0x44,
                0x4C, 0x26, 0x61, 0x6D, 0x70, 0x3B, 0x42, 0x4E, 0x54, 0x63, 0x22, 0x20, 0x3E, 0x28, 0x01, 0x38, 0xC8,
                0x8E, 0x03, 0x60, 0x01, 0x00, 0x03, 0x7F, 0x50, 0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0xBF, 0x80, 0xE6, 0xC2, 0x39, 0xBE, 0xCC, 0xCB, 0xBE, 0x59, 0x51, 0xAC, 0x3F, 0x80,
                0xE6, 0xC2, 0x40, 0x51, 0x15, 0x7E, 0x3D, 0xA9, 0xF9, 0x6F, 0x3F, 0x7D, 0x70, 0xA4, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox33A56FB0)
                    .WriteArray(packetData92))
                .Send(client);

            var packetData95 = new byte[]
            {
                0x00, 0x00, 0xC7, 0x48, 0x00, 0x00, 0x08, 0xCB, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0x0A,
                0x8D,
                0x64, 0x44, 0x15, 0x69, 0xF7, 0x33, 0x43, 0x1D, 0xB1, 0x6F, 0x8B, 0x44, 0x12, 0x14, 0x0D, 0x00, 0x00,
                0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x80, 0x3F,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0x94, 0x08, 0x00, 0x12, 0x1E, 0x54, 0x68, 0x72, 0x61, 0x73,
                0x68, 0x69, 0x6E, 0x67, 0x20, 0x53, 0x74, 0x65, 0x65, 0x6C, 0x2D, 0x73, 0x74, 0x75, 0x64, 0x64, 0x65,
                0x64, 0x20, 0x47, 0x6C, 0x6F, 0x76, 0x65, 0x73, 0x1A, 0x63, 0x3C, 0x72, 0x65, 0x6D, 0x6F, 0x74, 0x65,
                0x66, 0x6F, 0x72, 0x6D, 0x61, 0x74, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x33, 0x37, 0x36, 0x33, 0x38, 0x35,
                0x37, 0x22, 0x20, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35, 0x30, 0x32, 0x30,
                0x30, 0x22, 0x20, 0x6B, 0x65, 0x79, 0x3D, 0x22, 0x30, 0x49, 0x76, 0x58, 0x71, 0x66, 0x7A, 0x63, 0x68,
                0x38, 0x41, 0x3F, 0x73, 0x70, 0x34, 0x4C, 0x68, 0x2F, 0x59, 0x25, 0x22, 0x20, 0x6B, 0x6E, 0x75, 0x62,
                0x6F, 0x74, 0x3D, 0x22, 0x30, 0x22, 0x20, 0x20, 0x3E, 0x3C, 0x2F, 0x72, 0x65, 0x6D, 0x6F, 0x74, 0x65,
                0x66, 0x6F, 0x72, 0x6D, 0x61, 0x74, 0x3E, 0x28, 0x05, 0x38, 0xC8, 0x8E, 0x03, 0x40, 0x91, 0xDD, 0xE5,
                0x01, 0x60, 0x01, 0x00, 0x41, 0xCB, 0xF4, 0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0xBE, 0x64, 0x0C, 0x0E, 0xBC, 0xCD, 0x17, 0xB8, 0xBD, 0x1F, 0x58, 0x5E, 0x3E, 0x63, 0x81,
                0x1D, 0x3E, 0xD6, 0xCB, 0x62, 0x3C, 0xE0, 0x27, 0xFB, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox33A56FB0)
                    .WriteArray(packetData95))
                .Send(client);
        }

        private void Send0x66AEDD50(NetworkClient client)
        {
            var packetData83 = new byte[]
            {
                0x00, 0x00, 0xC8, 0x78, 0x00, 0x00, 0x87, 0x17, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0x40,
                0xAF,
                0x90, 0x44, 0x15, 0x07, 0x1D, 0x26, 0x43, 0x1D, 0x87, 0x21, 0x55, 0x44, 0x12, 0x14, 0x0D, 0x00, 0x00,
                0x00, 0x00, 0x15, 0x93, 0x8E, 0x62, 0x3F, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x25, 0x17, 0x65, 0xEE, 0xBE,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0x6F, 0x08, 0x00, 0x12, 0x0F, 0x49, 0x6E, 0x74, 0x72, 0x69,
                0x67, 0x75, 0x69, 0x6E, 0x67, 0x20, 0x4E, 0x6F, 0x74, 0x65, 0x1A, 0x56, 0x3C, 0x6C, 0x6F, 0x63, 0x61,
                0x6C, 0x69, 0x7A, 0x65, 0x64, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x35, 0x30, 0x32, 0x37, 0x32, 0x35, 0x32,
                0x22, 0x20, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35, 0x35, 0x30, 0x30, 0x30,
                0x22, 0x20, 0x66, 0x6C, 0x61, 0x67, 0x73, 0x3D, 0x22, 0x22, 0x20, 0x6B, 0x65, 0x79, 0x3D, 0x22, 0x34,
                0x5F, 0x5E, 0x71, 0x5F, 0x4C, 0x68, 0x26, 0x23, 0x33, 0x39, 0x3B, 0x4D, 0x25, 0x5B, 0x4A, 0x45, 0x4A,
                0x26, 0x23, 0x39, 0x32, 0x3B, 0x5B, 0x3F, 0x74, 0x48, 0x69, 0x22, 0x20, 0x3E, 0x28, 0x05, 0x60, 0x01,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBF,
                0x07, 0x1F, 0xB9, 0xBE, 0x4D, 0xA2, 0x70, 0xBE, 0x11, 0xC9, 0x40, 0x3F, 0x05, 0x05, 0x82, 0x40, 0x7B,
                0xBF, 0x66, 0x3E, 0x47, 0x33, 0x8A, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox66AEDD50)
                    .WriteArray(packetData83))
                .Send(client);

            var packetData84 = new byte[]
            {
                0x00, 0x00, 0xC8, 0x78, 0x00, 0x00, 0x87, 0x03, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0x33,
                0xD3,
                0x7B, 0x44, 0x15, 0x00, 0x80, 0x22, 0x43, 0x1D, 0x33, 0x53, 0x95, 0x44, 0x12, 0x14, 0x0D, 0x00, 0x00,
                0x00, 0x00, 0x15, 0xD8, 0x7E, 0xB2, 0x3D, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x25, 0xA3, 0x06, 0x7F, 0xBF,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0xAF, 0x08, 0xB5, 0xC1, 0x22, 0x12, 0x3B, 0x54, 0x45, 0x53,
                0x54, 0x5F, 0x4B, 0x68, 0x69, 0x74, 0x61, 0x69, 0x5F, 0x33, 0x61, 0x5F, 0x68, 0x65, 0x61, 0x76, 0x65,
                0x6E, 0x73, 0x6C, 0x61, 0x6B, 0x65, 0x5F, 0x73, 0x6F, 0x6C, 0x64, 0x69, 0x65, 0x72, 0x5F, 0x68, 0x65,
                0x61, 0x76, 0x79, 0x5F, 0x68, 0x61, 0x6E, 0x64, 0x5F, 0x28, 0x41, 0x32, 0x30, 0x31, 0x39, 0x2F, 0x41,
                0x32, 0x30, 0x32, 0x30, 0x29, 0x1A, 0x63, 0x3C, 0x72, 0x65, 0x6D, 0x6F, 0x74, 0x65, 0x66, 0x6F, 0x72,
                0x6D, 0x61, 0x74, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x33, 0x32, 0x33, 0x33, 0x32, 0x39, 0x32, 0x22, 0x20,
                0x63, 0x61, 0x74, 0x65, 0x67, 0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35, 0x30, 0x32, 0x30, 0x30, 0x22, 0x20,
                0x6B, 0x65, 0x79, 0x3D, 0x22, 0x6F, 0x39, 0x77, 0x46, 0x4F, 0x62, 0x54, 0x37, 0x70, 0x51, 0x61, 0x78,
                0x6B, 0x62, 0x66, 0x35, 0x63, 0x39, 0x70, 0x72, 0x22, 0x20, 0x6B, 0x6E, 0x75, 0x62, 0x6F, 0x74, 0x3D,
                0x22, 0x30, 0x22, 0x20, 0x20, 0x3E, 0x3C, 0x2F, 0x72, 0x65, 0x6D, 0x6F, 0x74, 0x65, 0x66, 0x6F, 0x72,
                0x6D, 0x61, 0x74, 0x3E, 0x28, 0x05, 0x40, 0x8C, 0xAC, 0xC5, 0x01, 0x60, 0x01, 0x00, 0x08, 0xA0, 0xB1,
                0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBF, 0xAC, 0x98, 0x3B, 0x3B,
                0x06, 0xD8, 0xDF, 0xBF, 0xAD, 0x69, 0x8B, 0x3F, 0xAA, 0x58, 0x8D, 0x40, 0x80, 0x1A, 0x9A, 0x3F, 0xAF,
                0x67, 0x74, 0x3F, 0xB1, 0xEB, 0x85, 0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox66AEDD50)
                    .WriteArray(packetData84))
                .Send(client);

            var packetData87 = new byte[]
            {
                0x00, 0x00, 0xC8, 0x78, 0x00, 0x00, 0x87, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0x66,
                0x12,
                0x7A, 0x44, 0x15, 0x17, 0xC6, 0x31, 0x43, 0x1D, 0x0E, 0x15, 0x93, 0x44, 0x12, 0x14, 0x0D, 0x00, 0x00,
                0x00, 0x00, 0x15, 0x7F, 0x2E, 0x3E, 0xBF, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x25, 0x31, 0x5E, 0x2B, 0x3F,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0x6D, 0x08, 0x00, 0x12, 0x0D, 0x57, 0x65, 0x73, 0x74, 0x65,
                0x72, 0x6E, 0x20, 0x44, 0x6F, 0x63, 0x6B, 0x73, 0x1A, 0x56, 0x3C, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x69,
                0x7A, 0x65, 0x64, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x33, 0x35, 0x39, 0x35, 0x36, 0x30, 0x39, 0x22, 0x20,
                0x63, 0x61, 0x74, 0x65, 0x67, 0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35, 0x35, 0x30, 0x30, 0x30, 0x22, 0x20,
                0x66, 0x6C, 0x61, 0x67, 0x73, 0x3D, 0x22, 0x22, 0x20, 0x6B, 0x65, 0x79, 0x3D, 0x22, 0x2F, 0x68, 0x44,
                0x44, 0x4E, 0x63, 0x42, 0x57, 0x41, 0x73, 0x6A, 0x33, 0x45, 0x26, 0x23, 0x33, 0x36, 0x3B, 0x56, 0x2C,
                0x26, 0x23, 0x33, 0x39, 0x3B, 0x39, 0x25, 0x47, 0x22, 0x20, 0x3E, 0x28, 0x01, 0x60, 0x01, 0x00, 0x35,
                0x05, 0x25, 0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBA, 0xE0, 0xFC,
                0x0A, 0xB9, 0x61, 0xF0, 0xA4, 0xBC, 0x58, 0x98, 0x46, 0x3E, 0xFB, 0xF7, 0x50, 0x3E, 0x0D, 0xFB, 0xC9,
                0x3C, 0x1F, 0xE0, 0xDB, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox66AEDD50)
                    .WriteArray(packetData87))
                .Send(client);

            var packetData88 = new byte[]
            {
                0x00, 0x00, 0xC8, 0x78, 0x00, 0x00, 0x87, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0x55,
                0x16,
                0x7A, 0x44, 0x15, 0x3A, 0xDD, 0x31, 0x43, 0x1D, 0x6D, 0x03, 0x93, 0x44, 0x12, 0x14, 0x0D, 0x00, 0x00,
                0x00, 0x00, 0x15, 0xA8, 0x57, 0x2A, 0x3F, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x25, 0xC6, 0x19, 0x3F, 0x3F,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0x6E, 0x08, 0x00, 0x12, 0x0D, 0x45, 0x61, 0x73, 0x74, 0x65,
                0x72, 0x6E, 0x20, 0x44, 0x6F, 0x63, 0x6B, 0x73, 0x1A, 0x57, 0x3C, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x69,
                0x7A, 0x65, 0x64, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x33, 0x35, 0x39, 0x35, 0x36, 0x31, 0x30, 0x22, 0x20,
                0x63, 0x61, 0x74, 0x65, 0x67, 0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35, 0x35, 0x30, 0x30, 0x30, 0x22, 0x20,
                0x66, 0x6C, 0x61, 0x67, 0x73, 0x3D, 0x22, 0x22, 0x20, 0x6B, 0x65, 0x79, 0x3D, 0x22, 0x26, 0x23, 0x33,
                0x39, 0x3B, 0x74, 0x42, 0x45, 0x59, 0x36, 0x32, 0x6A, 0x45, 0x3F, 0x53, 0x47, 0x26, 0x71, 0x75, 0x6F,
                0x74, 0x3B, 0x79, 0x2A, 0x4F, 0x66, 0x23, 0x4D, 0x36, 0x22, 0x20, 0x3E, 0x28, 0x01, 0x60, 0x01, 0x00,
                0x35, 0x05, 0x25, 0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBA, 0xE0,
                0xFC, 0x0A, 0xB9, 0x61, 0xF0, 0xA4, 0xBC, 0x58, 0x98, 0x46, 0x3E, 0xFB, 0xF7, 0x50, 0x3E, 0x0D, 0xFB,
                0xC9, 0x3C, 0x1F, 0xE0, 0xDB, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox66AEDD50)
                    .WriteArray(packetData88))
                .Send(client);

            var packetData89 = new byte[]
            {
                0x00, 0x00, 0xC8, 0x78, 0x00, 0x00, 0x87, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0x6A,
                0x16,
                0x7A, 0x44, 0x15, 0x57, 0xAA, 0x31, 0x43, 0x1D, 0x22, 0x03, 0x93, 0x44, 0x12, 0x14, 0x0D, 0x00, 0x00,
                0x00, 0x00, 0x15, 0xB0, 0x90, 0x29, 0xBF, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x25, 0x64, 0xCA, 0x3F, 0xBF,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0x6C, 0x08, 0x00, 0x12, 0x0C, 0x54, 0x72, 0x61, 0x64, 0x69,
                0x6E, 0x67, 0x20, 0x50, 0x6F, 0x73, 0x74, 0x1A, 0x56, 0x3C, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x69, 0x7A,
                0x65, 0x64, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x33, 0x35, 0x39, 0x35, 0x36, 0x31, 0x31, 0x22, 0x20, 0x63,
                0x61, 0x74, 0x65, 0x67, 0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35, 0x35, 0x30, 0x30, 0x30, 0x22, 0x20, 0x66,
                0x6C, 0x61, 0x67, 0x73, 0x3D, 0x22, 0x22, 0x20, 0x6B, 0x65, 0x79, 0x3D, 0x22, 0x5D, 0x69, 0x52, 0x36,
                0x6F, 0x62, 0x44, 0x71, 0x33, 0x41, 0x2D, 0x6C, 0x26, 0x23, 0x33, 0x36, 0x3B, 0x76, 0x6F, 0x62, 0x41,
                0x23, 0x26, 0x23, 0x33, 0x39, 0x3B, 0x41, 0x22, 0x20, 0x3E, 0x28, 0x01, 0x60, 0x01, 0x00, 0x35, 0x05,
                0x33, 0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x4C, 0xFE, 0x6B,
                0x3A, 0xE4, 0x11, 0xEB, 0xBC, 0x63, 0x12, 0x57, 0x3F, 0x01, 0x37, 0x31, 0x3E, 0x16, 0xDD, 0x78, 0x3C,
                0x27, 0x9C, 0xD0, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox66AEDD50)
                    .WriteArray(packetData89))
                .Send(client);

            var packetData90 = new byte[]
            {
                0x00, 0x00, 0xC8, 0x78, 0x00, 0x00, 0x87, 0x10, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0x66,
                0x12,
                0x7A, 0x44, 0x15, 0x6B, 0x93, 0x31, 0x43, 0x1D, 0x0E, 0x15, 0x93, 0x44, 0x12, 0x14, 0x0D, 0x00, 0x00,
                0x00, 0x00, 0x15, 0x7F, 0x2E, 0x3E, 0xBF, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x25, 0x31, 0x5E, 0x2B, 0x3F,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0x72, 0x08, 0x00, 0x12, 0x11, 0x54, 0x68, 0x65, 0x20, 0x4E,
                0x65, 0x65, 0x64, 0x6C, 0x65, 0x20, 0x6F, 0x66, 0x20, 0x53, 0x65, 0x74, 0x1A, 0x57, 0x3C, 0x6C, 0x6F,
                0x63, 0x61, 0x6C, 0x69, 0x7A, 0x65, 0x64, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x33, 0x35, 0x39, 0x35, 0x36,
                0x31, 0x37, 0x22, 0x20, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35, 0x35, 0x30,
                0x30, 0x30, 0x22, 0x20, 0x66, 0x6C, 0x61, 0x67, 0x73, 0x3D, 0x22, 0x22, 0x20, 0x6B, 0x65, 0x79, 0x3D,
                0x22, 0x6F, 0x59, 0x29, 0x47, 0x61, 0x6B, 0x44, 0x62, 0x26, 0x61, 0x6D, 0x70, 0x3B, 0x67, 0x26, 0x71,
                0x75, 0x6F, 0x74, 0x3B, 0x4F, 0x4D, 0x41, 0x53, 0x38, 0x38, 0x4D, 0x60, 0x29, 0x22, 0x20, 0x3E, 0x28,
                0x01, 0x60, 0x01, 0x00, 0x35, 0x05, 0x2C, 0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0xB9, 0xAE, 0x1A, 0x66, 0x3B, 0x08, 0x0E, 0x66, 0xBC, 0x58, 0x98, 0x46, 0x3E, 0xFC, 0xAC,
                0xC6, 0x3E, 0x10, 0x54, 0x7F, 0x3C, 0x1F, 0xE0, 0xDB, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox66AEDD50)
                    .WriteArray(packetData90))
                .Send(client);

            var packetData91 = new byte[]
            {
                0x00, 0x00, 0xC8, 0x78, 0x00, 0x00, 0x87, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0x4F,
                0x6D,
                0x65, 0x44, 0x15, 0x31, 0x56, 0x2B, 0x43, 0x1D, 0x55, 0xB2, 0x87, 0x44, 0x12, 0x14, 0x0D, 0x00, 0x00,
                0x00, 0x00, 0x15, 0x0B, 0x08, 0x95, 0xBE, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x25, 0x4B, 0xEA, 0x74, 0x3F,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0x65, 0x08, 0x00, 0x12, 0x0D, 0x45, 0x61, 0x73, 0x74, 0x65,
                0x72, 0x6E, 0x20, 0x44, 0x6F, 0x63, 0x6B, 0x73, 0x1A, 0x4E, 0x3C, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x69,
                0x7A, 0x65, 0x64, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x33, 0x35, 0x39, 0x35, 0x36, 0x30, 0x31, 0x22, 0x20,
                0x63, 0x61, 0x74, 0x65, 0x67, 0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35, 0x35, 0x30, 0x30, 0x30, 0x22, 0x20,
                0x66, 0x6C, 0x61, 0x67, 0x73, 0x3D, 0x22, 0x22, 0x20, 0x6B, 0x65, 0x79, 0x3D, 0x22, 0x71, 0x59, 0x53,
                0x6A, 0x25, 0x31, 0x4E, 0x2E, 0x5D, 0x70, 0x5F, 0x33, 0x5A, 0x62, 0x55, 0x41, 0x66, 0x2C, 0x4F, 0x34,
                0x22, 0x20, 0x3E, 0x28, 0x01, 0x60, 0x01, 0x00, 0x35, 0x05, 0x25, 0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBA, 0xE0, 0xFC, 0x0A, 0xB9, 0x61, 0xF0, 0xA4, 0xBC, 0x58, 0x98,
                0x46, 0x3E, 0xFB, 0xF7, 0x50, 0x3E, 0x0D, 0xFB, 0xC9, 0x3C, 0x1F, 0xE0, 0xDB, 0x3F, 0x80, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox66AEDD50)
                    .WriteArray(packetData91))
                .Send(client);

            var packetData93 = new byte[]
            {
                0x00, 0x00, 0xC8, 0x78, 0x00, 0x00, 0x87, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0x9A,
                0x53,
                0x65, 0x44, 0x15, 0xC7, 0x6D, 0x2B, 0x43, 0x1D, 0xE8, 0xB3, 0x87, 0x44, 0x12, 0x14, 0x0D, 0x00, 0x00,
                0x00, 0x00, 0x15, 0x7F, 0xDE, 0x64, 0xBF, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x25, 0xCC, 0x63, 0xE5, 0x3E,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0x65, 0x08, 0x00, 0x12, 0x0D, 0x57, 0x65, 0x73, 0x74, 0x65,
                0x72, 0x6E, 0x20, 0x44, 0x6F, 0x63, 0x6B, 0x73, 0x1A, 0x4E, 0x3C, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x69,
                0x7A, 0x65, 0x64, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x33, 0x35, 0x39, 0x35, 0x36, 0x30, 0x30, 0x22, 0x20,
                0x63, 0x61, 0x74, 0x65, 0x67, 0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35, 0x35, 0x30, 0x30, 0x30, 0x22, 0x20,
                0x66, 0x6C, 0x61, 0x67, 0x73, 0x3D, 0x22, 0x22, 0x20, 0x6B, 0x65, 0x79, 0x3D, 0x22, 0x43, 0x63, 0x58,
                0x35, 0x4D, 0x37, 0x45, 0x63, 0x58, 0x55, 0x66, 0x68, 0x21, 0x51, 0x54, 0x53, 0x7A, 0x63, 0x5F, 0x41,
                0x22, 0x20, 0x3E, 0x28, 0x01, 0x60, 0x01, 0x00, 0x35, 0x05, 0x25, 0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBA, 0xE0, 0xFC, 0x0A, 0xB9, 0x61, 0xF0, 0xA4, 0xBC, 0x58, 0x98,
                0x46, 0x3E, 0xFB, 0xF7, 0x50, 0x3E, 0x0D, 0xFB, 0xC9, 0x3C, 0x1F, 0xE0, 0xDB, 0x3F, 0x80, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox66AEDD50)
                    .WriteArray(packetData93))
                .Send(client);

            var packetData94 = new byte[]
            {
                0x00, 0x00, 0xC8, 0x78, 0x00, 0x00, 0x87, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0xDF,
                0x53,
                0x65, 0x44, 0x15, 0xBE, 0x9C, 0x2B, 0x43, 0x1D, 0x0C, 0xB4, 0x87, 0x44, 0x12, 0x14, 0x0D, 0x00, 0x00,
                0x00, 0x00, 0x15, 0x7F, 0xDE, 0x64, 0xBF, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x25, 0xCC, 0x63, 0xE5, 0x3E,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0x70, 0x08, 0x00, 0x12, 0x0C, 0x54, 0x72, 0x61, 0x64, 0x69,
                0x6E, 0x67, 0x20, 0x50, 0x6F, 0x73, 0x74, 0x1A, 0x5A, 0x3C, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x69, 0x7A,
                0x65, 0x64, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x33, 0x35, 0x39, 0x35, 0x35, 0x39, 0x39, 0x22, 0x20, 0x63,
                0x61, 0x74, 0x65, 0x67, 0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35, 0x35, 0x30, 0x30, 0x30, 0x22, 0x20, 0x66,
                0x6C, 0x61, 0x67, 0x73, 0x3D, 0x22, 0x22, 0x20, 0x6B, 0x65, 0x79, 0x3D, 0x22, 0x60, 0x76, 0x65, 0x26,
                0x23, 0x39, 0x32, 0x3B, 0x47, 0x26, 0x23, 0x39, 0x32, 0x3B, 0x63, 0x46, 0x57, 0x3F, 0x37, 0x2F, 0x6F,
                0x26, 0x61, 0x6D, 0x70, 0x3B, 0x61, 0x54, 0x78, 0x56, 0x7A, 0x4E, 0x22, 0x20, 0x3E, 0x28, 0x01, 0x60,
                0x01, 0x00, 0x35, 0x05, 0x33, 0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0xBB, 0x4C, 0xFE, 0x6B, 0x3A, 0xE4, 0x11, 0xEB, 0xBC, 0x63, 0x12, 0x57, 0x3F, 0x01, 0x37, 0x31, 0x3E,
                0x16, 0xDD, 0x78, 0x3C, 0x27, 0x9C, 0xD0, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox66AEDD50)
                    .WriteArray(packetData94))
                .Send(client);

            var packetData96 = new byte[]
            {
                0x00, 0x00, 0xC8, 0x78, 0x00, 0x00, 0x87, 0x08, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0x4F,
                0x6D,
                0x65, 0x44, 0x15, 0x0E, 0x85, 0x2B, 0x43, 0x1D, 0x55, 0xB2, 0x87, 0x44, 0x12, 0x14, 0x0D, 0x00, 0x00,
                0x00, 0x00, 0x15, 0x0B, 0x08, 0x95, 0xBE, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x25, 0x4B, 0xEA, 0x74, 0x3F,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0x60, 0x08, 0x00, 0x12, 0x08, 0x54, 0x68, 0x65, 0x20, 0x53,
                0x6F, 0x75, 0x6B, 0x1A, 0x4E, 0x3C, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x69, 0x7A, 0x65, 0x64, 0x20, 0x69,
                0x64, 0x3D, 0x22, 0x33, 0x35, 0x39, 0x35, 0x35, 0x39, 0x37, 0x22, 0x20, 0x63, 0x61, 0x74, 0x65, 0x67,
                0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35, 0x35, 0x30, 0x30, 0x30, 0x22, 0x20, 0x66, 0x6C, 0x61, 0x67, 0x73,
                0x3D, 0x22, 0x22, 0x20, 0x6B, 0x65, 0x79, 0x3D, 0x22, 0x25, 0x60, 0x4D, 0x34, 0x45, 0x53, 0x5E, 0x55,
                0x3F, 0x3F, 0x50, 0x37, 0x4A, 0x23, 0x28, 0x44, 0x5A, 0x52, 0x6D, 0x60, 0x22, 0x20, 0x3E, 0x28, 0x01,
                0x60, 0x01, 0x00, 0x35, 0x05, 0x2C, 0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0xB9, 0xAE, 0x1A, 0x66, 0x3B, 0x08, 0x0E, 0x66, 0xBC, 0x58, 0x98, 0x46, 0x3E, 0xFC, 0xAC, 0xC6,
                0x3E, 0x10, 0x54, 0x7F, 0x3C, 0x1F, 0xE0, 0xDB, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox66AEDD50)
                    .WriteArray(packetData96))
                .Send(client);

            var packetData97 = new byte[]
            {
                0x00, 0x00, 0xC8, 0x78, 0x00, 0x00, 0x87, 0x09, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x0A, 0x0F, 0x0D, 0x47,
                0x51,
                0x65, 0x44, 0x15, 0x52, 0x6B, 0x2B, 0x43, 0x1D, 0x35, 0xA7, 0x87, 0x44, 0x12, 0x14, 0x0D, 0x47, 0x3C,
                0x59, 0x3C, 0x15, 0xDC, 0xD5, 0x73, 0x3F, 0x1D, 0x14, 0xB2, 0xF3, 0x3B, 0x25, 0xF0, 0xC1, 0x9B, 0x3E,
                0x18, 0xBA, 0xEC, 0x43, 0x00, 0x00, 0x00, 0x6F, 0x08, 0x00, 0x12, 0x12, 0x53, 0x65, 0x72, 0x70, 0x65,
                0x6E, 0x74, 0x27, 0x73, 0x20, 0x48, 0x65, 0x61, 0x64, 0x20, 0x49, 0x6E, 0x6E, 0x1A, 0x53, 0x3C, 0x6C,
                0x6F, 0x63, 0x61, 0x6C, 0x69, 0x7A, 0x65, 0x64, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x33, 0x35, 0x39, 0x35,
                0x35, 0x39, 0x38, 0x22, 0x20, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6F, 0x72, 0x79, 0x3D, 0x22, 0x35, 0x35,
                0x30, 0x30, 0x30, 0x22, 0x20, 0x66, 0x6C, 0x61, 0x67, 0x73, 0x3D, 0x22, 0x22, 0x20, 0x6B, 0x65, 0x79,
                0x3D, 0x22, 0x78, 0x71, 0x69, 0x4D, 0x6E, 0x66, 0x65, 0x48, 0x49, 0x5B, 0x23, 0x7A, 0x53, 0x31, 0x26,
                0x71, 0x75, 0x6F, 0x74, 0x3B, 0x56, 0x64, 0x6D, 0x70, 0x77, 0x22, 0x20, 0x3E, 0x28, 0x01, 0x60, 0x01,
                0x00, 0x35, 0x05, 0x33, 0x00, 0x0F, 0x69, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB,
                0x4C, 0xFE, 0x6B, 0x3A, 0xE4, 0x11, 0xEB, 0xBC, 0x63, 0x12, 0x57, 0x3F, 0x01, 0x37, 0x31, 0x3E, 0x16,
                0xDD, 0x78, 0x3C, 0x27, 0x9C, 0xD0, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox66AEDD50)
                    .WriteArray(packetData97))
                .Send(client);
        }

        private void Send0x4F57DC08(NetworkClient client)
        {
            var packetData136 = new byte[]
            {
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x46, 0xA8, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x03,
                0x00,
                0x01, 0x42, 0x10, 0x54, 0xEB, 0x48, 0xD4, 0x3F, 0x80, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox4F57DC08)
                    .WriteArray(packetData136))
                .Send(client);
        }

        private void Send0x642CD3D6(NetworkClient client)
        {
            var packetData142 = new byte[]
            {
                0x00, 0x00, 0xC3, 0x50, 0x00, 0x02, 0x7A, 0x2C, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
                0x0E,
                0x08, 0xEF, 0xE5, 0x03, 0x18, 0xEC, 0x03, 0x28, 0x18, 0x30, 0x00, 0x60, 0xA8, 0x02
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox642CD3D6)
                    .WriteArray(packetData142))
                .Send(client);

            var packetData147 = new byte[]
            {
                0x00, 0x00, 0xC3, 0x50, 0x00, 0x02, 0x7A, 0x4A, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
                0x0E,
                0x08, 0xDC, 0xE5, 0x03, 0x18, 0xEA, 0x01, 0x28, 0x18, 0x30, 0x00, 0x60, 0xC0, 0x02
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox642CD3D6)
                    .WriteArray(packetData147))
                .Send(client);

            var packetData148 = new byte[]
            {
                0x00, 0x00, 0xC3, 0x50, 0x00, 0x02, 0x7A, 0x2A, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
                0x0E,
                0x08, 0xB7, 0xC9, 0x02, 0x18, 0xB9, 0x01, 0x28, 0x18, 0x30, 0x00, 0x60, 0xB4, 0x06
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox642CD3D6)
                    .WriteArray(packetData148))
                .Send(client);

            var packetData149 = new byte[]
            {
                0x00, 0x00, 0xC3, 0x50, 0x00, 0x02, 0x7A, 0x2F, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
                0x0E,
                0x08, 0x91, 0xC2, 0x02, 0x18, 0x90, 0x02, 0x28, 0x18, 0x30, 0x00, 0x60, 0xC8, 0x01
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox642CD3D6)
                    .WriteArray(packetData149))
                .Send(client);

            var packetData150 = new byte[]
            {
                0x00, 0x00, 0xC3, 0x50, 0x00, 0x02, 0x7A, 0x25, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
                0x0E,
                0x08, 0xC7, 0x9A, 0x0D, 0x18, 0xA9, 0x04, 0x28, 0x18, 0x30, 0x00, 0x60, 0x90, 0x03
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox642CD3D6)
                    .WriteArray(packetData150))
                .Send(client);

            var packetData152 = new byte[]
            {
                0x00, 0x00, 0xC3, 0x50, 0x00, 0x02, 0x7A, 0x4A, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
                0x0E,
                0x08, 0x83, 0xC9, 0x02, 0x18, 0xEB, 0x01, 0x28, 0x18, 0x30, 0x00, 0x60, 0x90, 0x1C
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox642CD3D6)
                    .WriteArray(packetData152))
                .Send(client);
        }

        private void Send0x96C46740(NetworkClient client)
        {
            var packetData151 = new byte[]
            {
                0x00, 0x00, 0xC3, 0x50, 0x00, 0x02, 0x7A, 0x6E, 0x00, 0x00, 0x44, 0x8A, 0xEE, 0x90, 0x43, 0x21, 0x57,
                0xE4,
                0x44, 0x56, 0x25, 0x5B, 0x07, 0x00, 0x00, 0xC3, 0x50, 0x00, 0x02, 0x7A, 0x39, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0xC0, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            };
            new PacketStream().WriteHeader(Sender5, Receiver5, null, 0x2000)
                .WriteArrayPrependLengthUInt32(new ConanStream()
                    .WriteUInt32(Ox2000RespondsOpcodes.Ox96C46740)
                    .WriteArray(packetData151))
                .Send(client);
        }
    }
}