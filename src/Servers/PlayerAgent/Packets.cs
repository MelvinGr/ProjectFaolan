using System;
using System.Collections.Generic;
using LibFaolan.Config;
using LibFaolan.Data;
using LibFaolan.Database;
using LibFaolan.DllImport;
using LibFaolan.Network;

namespace PlayerAgent
{
    partial class PlayerAgentListener
    {
        private static readonly byte[] Sender = {0x0d, 0x84, 0x04, 0xf2, 0x82, 0x10, 0x02};
        private static readonly byte[] Receiver = {0x0d, 0x38, 0x57, 0x15, 0x7d, 0x10, 0xeb, 0x8e, 0x95, 0xbf, 0x05};
        private static readonly byte[] Sender2 = {0x0d, 0x16, 0x91, 0x35, 0x1d, 0x10, 0x14};
        private static readonly byte[] sender3 = {0x0D, 0x16, 0x91, 0x35, 0x1D, 0x10, 0x46};
        private static readonly byte[] receiver3 = {0x0D, 0x38, 0x57, 0x15, 0x7D, 0x10, 0xEC, 0xEB, 0x80, 0xDE, 0x03};
        private static readonly byte[] Sender4 = {0x0D, 0x84, 0x04, 0xF2, 0x82, 0x10, 0x03};
        private static readonly byte[] Receiver4 = {0x0D, 0x38, 0x57, 0x15, 0x7D, 0x10, 0xEC, 0xEB, 0x80, 0xDE, 0x03};

        public void InitAuth(NetworkClient client, Account account)
        {
            byte[] headerData = {0x93, 0x86, 0xee, 0x05};

            new ConanStream()
                .WriteHeader(Sender, Receiver, headerData, 0x2091, true)
                .WriteUInt32(account.AuthStatus)
                .Send(client);
        }

        public void SendSmallCharList(NetworkClient client, Account account)
        {
            var characters = new List<Character>(); // get from db
            var anzChars = (UInt32) characters.Count;

            byte[] headerData = {0x94, 0xa7, 0x60};

            var aBuffer = new ConanStream();
            aBuffer.WriteHeader(Sender, Receiver, headerData, 0x20a5, true);
            aBuffer.WriteUInt32((anzChars + 1)*1009);
            foreach (var character in characters)
            {
                aBuffer.WriteUInt32(character.Id);
                aBuffer.WriteUInt16(0);
            }

            aBuffer.Send(client);
        }

        public void SendCharacterList(NetworkClient client, Account account, IDatabase database)
        {
            var characters = account.GetCharacters(Database);
            byte[] headerData = {0x8b, 0xd3, 0xa0, 0x0c};

            var aBuffer = new ConanStream();
            aBuffer.WriteHeader(Sender, Receiver, headerData, 0x20ef, true); // UpdateClientPlayerData
            aBuffer.WriteUInt32(account.Id); // PlayerInstance
            var anzChars = (UInt32) characters.Length;

            aBuffer.WriteUInt32((anzChars + 1)*1009); // number of characters
            foreach (var character in characters)
            {
                aBuffer.WriteUInt32(character.Id); // Charinstance
                aBuffer.WriteUInt32(account.Id); // PlayerInstance
                aBuffer.WriteUInt32(character.Id); // Charinstance
                aBuffer.WriteString(character.Name); // charName
                aBuffer.WriteUInt32(character.RealmId); // serverID
                aBuffer.WriteUInt32(0x00000000);
                //aBuffer.WriteUInt32(characters[i].sex); // Sex
                aBuffer.WriteString(""); //character.LastConnection); //last connection
                aBuffer.WriteUInt32(0x00000000); // u1
                aBuffer.WriteUInt32(character.Map); // playfield
                aBuffer.WriteUInt32(character.Level); // Charlevel
                aBuffer.WriteUInt32(character.Class); // class
                aBuffer.WriteUInt32(0x00000000); // u2
                aBuffer.WriteUInt32(0x00000000); // u2
                aBuffer.WriteUInt32(0x515c4d50); // u3
                aBuffer.WriteUInt32(0x00000002); // u4
                aBuffer.WriteUInt32(character.Race); // race
                //aBuffer.write<string>("en");
                aBuffer.WriteUInt16(0);
                aBuffer.WriteUInt32(0x00000000); // u6
                aBuffer.WriteUInt32(0x00000000); // u7
                aBuffer.WriteUInt16(0);
                //aBuffer.write<string>("6f60ebba2cd4881d0393617a01f761b4"); // u8
            }
            aBuffer.WriteUInt32(0x000003f1); // = Playeragent:EnterWorld:unk0
            aBuffer.WriteUInt32(account.Id);
            aBuffer.WriteUInt32(0x00000000);
            aBuffer.WriteUInt32(0x00000102);
            aBuffer.WriteUInt32(0x00000000);
            aBuffer.WriteUInt32(0x00000000);
            //aBuffer.WriteUInt32(0x00000002);
            aBuffer.WriteUInt32(Settings.CharacterSlots);
            aBuffer.WriteUInt32(0x00000000);
            //aBuffer.WriteUInt16(0x0000);
            aBuffer.WriteString(
                "https://www.facebook.com/dialog/oauth?client_id=224452727645859&display=popup&redirect_uri=https://www.facebook.com/connect/login_success.html&scope=read_stream,publish_stream,publish_actions,offline_access,user_photos,user_videos,user_photo_video_tags&response_type=token");
            aBuffer.WriteUInt32(0x00000001);
            aBuffer.Send(client);
        }

        public void SendRealmList(NetworkClient client, Account account)
        {
            byte[] headerData = {0xe2, 0xe6, 0xc4, 0x0f};

            var aBuffer = new ConanStream();
            aBuffer.WriteHeader(Sender, Receiver, headerData, 0x20cc, true); // SetDimensionList
            aBuffer.WriteUInt32(Realms.Count);
            foreach (var realm in Realms)
            {
                aBuffer.WriteUInt32(realm.RealmId);
                aBuffer.WriteUInt32(realm.OnlineStatus);
                aBuffer.WriteString(realm.RealmName);
                aBuffer.WriteUInt32(0x00000c02); //u2
                aBuffer.WriteUInt32(0x00000000); //u3
                aBuffer.WriteUInt32(0x00000000); //u4
                aBuffer.WriteUInt32(realm.FullStatus);
                aBuffer.WriteUInt32(realm.LoadStatus);
                aBuffer.WriteUInt16(0x0000);
                aBuffer.WriteByte(0x00);
                aBuffer.WriteUInt16(realm.RealmType);
                aBuffer.WriteUInt32(realm.Country);
                aBuffer.WriteByte(0x00);
            }

            aBuffer.Send(client);
        }

        public void Request_Char_RealmData_1(NetworkClient client, Account account)
        {
            byte[] headerData = {0xcb, 0xc6, 0xfc, 0x04};

            new ConanStream()
                .WriteHeader(Sender, Receiver, headerData, 0x208c, true)
                .WriteUInt32(1)
                .Send(client);
        }

        public void Ox20a6_1(NetworkClient client, Account account)
        {
            byte[] headerData = {0x99, 0x95, 0x92, 0x05};

            new ConanStream()
                .WriteHeader(Sender, Receiver, headerData, 0x209c, true)
                .WriteUInt16(0)
                .WriteByte(0)
                .Send(client);
        }

        public void SendCSPlayerAgent(NetworkClient client, Account account)
        {
            // fs21.bin_0
            byte[] headerData = {0x0D, 0x38, 0x57, 0x15, 0x7D, 0x10, 0x01, 0x20, 0xE0, 0xD4, 0xB4, 0xD7, 0x05};
            byte[] packetData =
            {
                0x25, 0x12, 0xC0, 0x2C, 0x1B, 0x63, 0x56, 0x79, 0xE2, 0xCF, 0x00, 0x00, 0xC3,
                0x50, 0x08, 0x02, 0xE5, 0xD4
            };

            new ConanStream() // send CSPlayerAgent
                .WriteHeader(sender3, receiver3, headerData, 0x1A07, true)
                .WriteUInt32(Network.htonl(Network.inet_addr(Settings.CSPlayerAgentAddress)))
                .WriteUInt16(Settings.CSPlayerAgentPort)
                .WriteUInt32(account.Id)
                .WriteUInt32(0x0000c350)
                .Send(client);
        }

        public void SendPlayerAgent(NetworkClient client, Account account)
        {
            // fs21.bin_1
            var headerData = new byte[]
            {0x0D, 0x38, 0x57, 0x15, 0x7D, 0x10, 0x01, 0x20, 0xFA, 0xE5, 0x98, 0x9D, 0x02};
            var packetData = new byte[]
            {
                0x25, 0x12, 0xC0, 0x2C, 0x1B, 0x5A, 0x56, 0x79, 0xE2, 0xCF, 0x00, 0x00, 0xC3, 0x50, 0x08, 0x02,
                0xE5, 0xD4
            };

            new ConanStream() // Send PlayerAgent
                .WriteHeader(sender3, receiver3, headerData, 0x1A07, true)
                .WriteUInt32(Network.htonl(Network.inet_addr(Settings.PlayerAgentAddress)))
                .WriteUInt16(Settings.PlayerAgentPort)
                .WriteUInt32(account.Id)
                .WriteUInt32(0x0000c350)
                .Send(client);
        }

        public void SendGameServer(NetworkClient client, Account account)
        {
            // fs21.bin_2
            var headerData = new byte[]
            {0x0D, 0x38, 0x57, 0x15, 0x7D, 0x10, 0x01, 0x20, 0xF9, 0xD8, 0xD9, 0xC5, 0x0D};
            var packetData = new byte[]
            {
                0x56, 0x79, 0xE2, 0xCF, 0x00, 0x00, 0xC3, 0x50, 0x08, 0x02, 0xE5, 0xD4, 0x62, 0x00, 0x00, 0xC7,
                0x9C, 0x00, 0x00, 0x0B, 0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x01, 0x00, 0x00, 0x9C, 0x50, 0x00, 0x10, 0xBD, 0xAC
            };

            new ConanStream() // Send WorldServer
                .WriteHeader(sender3, receiver3, headerData, 0x1A07, true)
                .WriteString(Realms[0].IpAddress + ":" + Realms[0].Port)
                .WriteArray(packetData)
                .Send(client);
        }

        public void SendLast(NetworkClient client, Account account)
        {
            // fs21.bin_3
            var headerData = new byte[]
            {0x0D, 0x38, 0x57, 0x15, 0x7D, 0x10, 0x01, 0x20, 0xE3, 0xEE, 0x9F, 0xE2, 0x07};

            new ConanStream()
                .WriteHeader(sender3, receiver3, headerData, 0x1A07, true)
                .WriteUInt32(0x0000276A)
                .WriteString("AAPointsPerLevel")
                .WriteUInt32(0x3FF00000)
                .WriteUInt32(0x00000000)
                .WriteString("AlternateAdvancement_GenericTokensAwarded")
                .WriteUInt32(0x3FF00000)
                .WriteUInt32(0x00000000)
                .WriteString("AlternateAdvancement_SpecificTokensAwarded")
                .WriteUInt32(0x40080000)
                .WriteUInt32(0x00000000)
                .WriteString("Anniversary_5_SpawnBosses")
                .WriteUInt32(0x00000000)
                .WriteUInt32(0x00000000)
                .WriteString("EventAnniversary_2014")
                .WriteUInt32(0x00000000)
                .WriteUInt32(0x00000000)
                .WriteString("EventHalloween")
                .WriteUInt32(0x00000000)
                .WriteUInt32(0x00000000)
                .WriteString("IsPvPServer")
                .WriteUInt32(0x00000000)
                .WriteUInt32(0x00000000)
                .WriteString("WorldBoss_SpawnDay_Boss_11")
                .WriteUInt32(0x40140000)
                .WriteUInt32(0x00000000)
                .WriteString("WorldBoss_SpawnWeek_Boss_11")
                .WriteUInt32(0x40000000)
                .WriteUInt32(0x00000000)
                .Send(client);
        }

        public void EnterWorld(NetworkClient client, Account account)
        {
            byte[] headerData = {0x8B, 0xD8, 0x99, 0x02};
            byte[] packetData =
            {
                0x00, 0x00, 0x13, 0xF2, 0x49, 0x4F,
                0x7A, 0x31, 0x95, 0x8E, 0x00, 0x00, 0x78, 0xDA, 0xED, 0x5D, 0x5B, 0x8F, 0x1B, 0xB9, 0x72, 0x76, 0x5E,
                0x73, 0x10, 0x20, 0x6F, 0x41, 0xCE, 0x93, 0xE1, 0x05, 0xCE, 0x9E, 0x05, 0x6C, 0xAF, 0x6E, 0xA3, 0x0B,
                0xD6, 0x7B, 0x16, 0x73, 0xF1, 0xD8, 0x93, 0x1D, 0xCD, 0x28, 0x23, 0xD9, 0x73, 0x0E, 0x70, 0x80, 0x06,
                0xD5, 0xA2, 0xA4, 0xCE, 0xB0, 0xC9, 0x5E, 0x92, 0x3D, 0x1A, 0xE5, 0xCF, 0x25, 0xBF, 0x24, 0xBF, 0x20,
                0x3F, 0x22, 0x45, 0x76, 0x4B, 0x62, 0x4B, 0x7D, 0x21, 0x25, 0xAD, 0xD7, 0xCE, 0x7A, 0x1F, 0xBC, 0x6D,
                0x0F, 0xBF, 0x62, 0x91, 0x55, 0x2C, 0x56, 0x15, 0x8B, 0x9C, 0x7F, 0x7E, 0xF6, 0xEC, 0xD9, 0xF9, 0x1C,
                0xC9, 0xBF, 0xDF, 0x07, 0x74, 0xC2, 0x16, 0xE2, 0xF5, 0x53, 0x48, 0xFE, 0xEB, 0xDB, 0x67, 0xCF, 0xDE,
                0x9C, 0x72, 0x7F, 0x1E, 0x3C, 0xE2, 0xBF, 0xFC, 0xD3, 0x3F, 0x3E, 0x87, 0xFF, 0xDE, 0x0C, 0x25, 0x0F,
                0xE8, 0xEC, 0x39, 0x45, 0x21, 0xFE, 0xF1, 0x05, 0x41, 0x42, 0x7A, 0xC8, 0x97, 0xF0, 0x73, 0x4F, 0xA2,
                0xF1, 0x8B, 0xE7, 0x8F, 0x88, 0xC4, 0xF8, 0xC7, 0x6F, 0xFF, 0xF4, 0x4B, 0xCC, 0xE4, 0x0F, 0xEF, 0x30,
                0xC5, 0x1C, 0x91, 0x3F, 0x7D, 0xF3, 0x54, 0xBB, 0xF8, 0x41, 0xFD, 0x79, 0xFA, 0x43, 0xF2, 0x83, 0x6F,
                0x9F, 0x7F, 0xBF, 0x22, 0x97, 0x52, 0x4F, 0xE9, 0x2D, 0x92, 0xBE, 0x5F, 0xA4, 0x3F, 0xD5, 0x2D, 0xCE,
                0x18, 0x23, 0xE9, 0x8F, 0x03, 0xE1, 0x4D, 0x39, 0xA3, 0x32, 0x64, 0x42, 0xAE, 0xFA, 0x7A, 0x31, 0x45,
                0x44, 0xE0, 0x17, 0x6B, 0x8A, 0x39, 0x98, 0x31, 0xF2, 0x1F, 0x1C, 0x21, 0x42, 0x06, 0xFE, 0xC3, 0xD2,
                0x01, 0xE0, 0x13, 0x00, 0xC8, 0x39, 0x67, 0xF1, 0x6C, 0x5E, 0x0A, 0xBB, 0xA2, 0xB2, 0xD9, 0x48, 0x71,
                0x30, 0x65, 0x9E, 0xC0, 0x04, 0xC3, 0x04, 0x32, 0xBA, 0x46, 0xD5, 0x4A, 0x3B, 0x9A, 0x30, 0xFF, 0x01,
                0x4F, 0x4A, 0xBB, 0x38, 0xE5, 0x1C, 0x2D, 0x53, 0xC4, 0x0C, 0x38, 0x8A, 0xBC, 0xC7, 0x00, 0x2F, 0x3C,
                0xA4, 0xFE, 0xD9, 0x9C, 0x5A, 0x53, 0x00, 0x5B, 0xFF, 0xBC, 0x2B, 0x6A, 0xF5, 0xA7, 0xBB, 0x7C, 0x33,
                0xF4, 0xB6, 0x06, 0x82, 0xA7, 0x28, 0x26, 0xD2, 0xD4, 0x9B, 0xBC, 0xD1, 0x14, 0xA0, 0x51, 0x2C, 0x99,
                0x88, 0xC7, 0xC2, 0xE7, 0xC1, 0x18, 0x7B, 0x89, 0xDE, 0xAC, 0xC9, 0x48, 0x1E, 0xDB, 0x51, 0x09, 0xB1,
                0x10, 0x68, 0x86, 0xBD, 0x29, 0x9A, 0xC0, 0x48, 0x3D, 0x4C, 0xD1, 0x98, 0x94, 0x4F, 0x6E, 0x01, 0x21,
                0x19, 0x00, 0x29, 0x89, 0xC2, 0x48, 0x1C, 0x42, 0x04, 0x3F, 0xC9, 0x80, 0x46, 0xB1, 0xDC, 0xA1, 0x61,
                0x37, 0xA0, 0x09, 0xD6, 0x4B, 0x11, 0x49, 0xEC, 0x31, 0x0A, 0x8A, 0x45, 0x5D, 0x09, 0xCC, 0x83, 0x09,
                0xF6, 0x12, 0x0E, 0x16, 0x73, 0x4C, 0xE1, 0x33, 0x59, 0xDB, 0x56, 0x63, 0xC9, 0x68, 0x0B, 0x8B, 0xA5,
                0xA2, 0xA2, 0xB5, 0x6F, 0x4B, 0x6B, 0xBE, 0xA9, 0xA5, 0xFF, 0xB5, 0x92, 0xFF, 0x35, 0xBE, 0x29, 0x55,
                0x9A, 0x4B, 0xC2, 0x90, 0x5C, 0xCD, 0x91, 0x66, 0x6D, 0x8E, 0x83, 0xD9, 0x7C, 0xB3, 0x98, 0x4F, 0x6A,
                0xAF, 0x13, 0x42, 0x05, 0x7C, 0x65, 0x2D, 0x4C, 0x4A, 0x22, 0x10, 0x92, 0xF1, 0x9D, 0xC5, 0x90, 0xBB,
                0x82, 0xFC, 0x98, 0x0B, 0xC6, 0xBD, 0x88, 0x89, 0xA2, 0xE6, 0xC6, 0xBA, 0x4E, 0x79, 0xAA, 0x17, 0x30,
                0x53, 0xD0, 0xFA, 0xC4, 0xA9, 0x75, 0xD7, 0xA5, 0x75, 0xCF, 0xA5, 0x71, 0x09, 0x1F, 0x6F, 0xBE, 0xD7,
                0x73, 0x62, 0x33, 0x61, 0x4A, 0x8D, 0x4B, 0xA7, 0x2A, 0xD5, 0x94, 0x8C, 0x56, 0x7C, 0x0F, 0x02, 0x01,
                0x6B, 0x12, 0x53, 0x5C, 0xA6, 0x0D, 0xE5, 0x24, 0x24, 0x26, 0xE4, 0xF9, 0xD5, 0x18, 0xF3, 0x25, 0xA2,
                0xCF, 0x7F, 0x3A, 0x12, 0x1D, 0xCA, 0xA2, 0x03, 0x58, 0x12, 0x30, 0x2B, 0x73, 0x34, 0x47, 0xFB, 0x53,
                0xF0, 0xC1, 0xA8, 0x54, 0xA1, 0x8B, 0x85, 0xA3, 0x7E, 0x52, 0x68, 0xDF, 0xCD, 0xAD, 0x68, 0x0A, 0xDB,
                0xAA, 0x17, 0x6C, 0x0C, 0x46, 0xAB, 0x70, 0x35, 0x6D, 0x04, 0x9D, 0x6C, 0x5D, 0x78, 0x92, 0x2C, 0x73,
                0x6F, 0x1A, 0x3C, 0xA9, 0x7F, 0x2F, 0x5C, 0x26, 0xB9, 0xE3, 0x53, 0x2E, 0x87, 0x86, 0xF7, 0xF1, 0x3C,
                0x90, 0xE3, 0x25, 0xA6, 0x8F, 0x01, 0x6C, 0xF1, 0x21, 0xA6, 0xB2, 0x72, 0xD4, 0x36, 0xF4, 0x42, 0x34,
                0x0B, 0xFC, 0xC3, 0x28, 0xFD, 0x8D, 0xC5, 0x3C, 0xC2, 0xF2, 0x88, 0xE4, 0x80, 0x14, 0x93, 0x73, 0xCC,
                0x17, 0x81, 0x9C, 0x1F, 0x81, 0x62, 0x1F, 0xBF, 0x0F, 0xE4, 0xAD, 0x22, 0x78, 0xB6, 0xBC, 0x41, 0x94,
                0x1D, 0x67, 0xE2, 0x18, 0x15, 0x12, 0xF3, 0xA3, 0xD0, 0x8A, 0x08, 0x5A, 0x1E, 0x4A, 0xCA, 0x98, 0xB6,
                0xE3, 0x89, 0xF3, 0x08, 0xE4, 0xF4, 0xBC, 0x1F, 0x8B, 0x58, 0x1F, 0xCF, 0x98, 0xFC, 0xEB, 0xE0, 0x58,
                0xEA, 0x70, 0x0F, 0xFA, 0xF5, 0x76, 0x3A, 0x85, 0x45, 0x7A, 0x04, 0x8A, 0xC7, 0x22, 0xA6, 0x39, 0x3B,
                0x36, 0x87, 0x4A, 0xA8, 0x61, 0x20, 0x04, 0x16, 0x47, 0x60, 0xEE, 0x18, 0x84, 0x80, 0xA1, 0x19, 0x7A,
                0xC4, 0x73, 0x8C, 0x88, 0x9C, 0x1F, 0x41, 0x29, 0x8E, 0x46, 0x28, 0x44, 0x14, 0x1D, 0x65, 0x68, 0x47,
                0x23, 0xA4, 0xFC, 0xE6, 0xE0, 0x50, 0x5A, 0x3F, 0x07, 0x84, 0xF4, 0x13, 0x6F, 0xFE, 0x40, 0xC9, 0xF5,
                0x97, 0x03, 0x2C, 0x57, 0xFA, 0x79, 0x44, 0x52, 0xC7, 0xB0, 0xCD, 0x30, 0x63, 0x03, 0x08, 0xE3, 0x02,
                0x3C, 0x39, 0x7C, 0xB9, 0x9C, 0xEA, 0xA8, 0x13, 0x7C, 0x00, 0xCC, 0x79, 0x1C, 0xC9, 0x43, 0x49, 0x9E,
                0xC5, 0xD3, 0xE9, 0x25, 0x9A, 0x60, 0x71, 0xC9, 0x59, 0x08, 0xF4, 0x0F, 0xA3, 0x36, 0x0C, 0xF0, 0x0C,
                0x0F, 0x7D, 0xC6, 0x0F, 0x95, 0xE6, 0x50, 0x22, 0x2E, 0x87, 0x92, 0x45, 0xE7, 0x08, 0x62, 0x7A, 0x3A,
                0x1B, 0x46, 0xE0, 0xDC, 0x1D, 0x53, 0x43, 0xFA, 0xB0, 0x0C, 0x86, 0x07, 0x6A, 0xF0, 0x3B, 0xED, 0x3F,
                0x8D, 0x78, 0x00, 0xC1, 0x74, 0x59, 0x2C, 0x54, 0xEC, 0xE6, 0x95, 0xB8, 0x65, 0xC1, 0xA4, 0xD8, 0x23,
                0x03, 0xE9, 0xB7, 0x5B, 0xEB, 0xC0, 0xA2, 0x5E, 0xEB, 0x34, 0x7A, 0xED, 0xC6, 0x49, 0xA7, 0x24, 0x0C,
                0xC8, 0x47, 0x74, 0x9D, 0x11, 0x3D, 0x57, 0x44, 0xBB, 0xE6, 0x8C, 0xA8, 0x3B, 0x23, 0x1A, 0xCE, 0x88,
                0xA6, 0x33, 0xA2, 0xE5, 0x8C, 0x38, 0x71, 0x46, 0xB4, 0x9D, 0x11, 0xCE, 0x32, 0x6F, 0x3B, 0xCB, 0xBC,
                0xED, 0x2C, 0xF3, 0x8E, 0xB3, 0xCC, 0x3B, 0xCE, 0xF2, 0xE8, 0x38, 0xCB, 0xA3, 0xE3, 0x2C, 0x8F, 0x8E,
                0xB3, 0x3C, 0x3A, 0xCE, 0xF2, 0xE8, 0x38, 0xCB, 0xA3, 0xE3, 0x2C, 0x8F, 0xAE, 0xB3, 0x3C, 0xBA, 0xCE,
                0x6B, 0xB0, 0xEB, 0xBC, 0x06, 0xBB, 0xCE, 0x32, 0xEF, 0x3A, 0xCF, 0x6E, 0xD7, 0x79, 0x76, 0x7B, 0xCE,
                0x73, 0xD5, 0x73, 0x1E, 0x79, 0xCF, 0x7E, 0xE4, 0x9D, 0x7A, 0xA7, 0xD7, 0xED, 0x74, 0xEB, 0xDD, 0x02,
                0x55, 0xCC, 0xDF, 0x5B, 0x8A, 0xD2, 0x07, 0x87, 0x64, 0x8D, 0xCF, 0x59, 0x38, 0x46, 0xF2, 0xF3, 0x48,
                0x14, 0xDB, 0x93, 0xF9, 0x9A, 0x29, 0xFE, 0xF4, 0x99, 0xE2, 0xDF, 0x2E, 0x2F, 0x9C, 0x8F, 0xF8, 0x9A,
                0x2F, 0xFB, 0x2D, 0xF2, 0x65, 0x5F, 0xB3, 0x5B, 0xBF, 0x61, 0x76, 0xEB, 0xF7, 0x90, 0x90, 0x3A, 0x56,
                0xEE, 0xE8, 0x6B, 0xCA, 0xE7, 0xD3, 0xA6, 0x7C, 0xBE, 0x26, 0x6A, 0xBE, 0x9C, 0x44, 0xCD, 0xEF, 0x3B,
                0x75, 0xF1, 0xFB, 0x4D, 0x44, 0x7C, 0x9E, 0x69, 0x85, 0xE6, 0xD7, 0x90, 0xFF, 0x6B, 0x00, 0xBF, 0x6F,
                0x00, 0x6F, 0x1F, 0x29, 0xEF, 0xB6, 0x7C, 0x73, 0x07, 0xE6, 0x2D, 0xB5, 0x75, 0x49, 0x9D, 0xDD, 0x25,
                0x37, 0x22, 0xE4, 0x17, 0xEA, 0xC7, 0x7F, 0xAE, 0xD7, 0xD3, 0xC0, 0xE5, 0xE5, 0x49, 0xBD, 0xB9, 0xFA,
                0x6C, 0xD6, 0xDA, 0xAB, 0xCF, 0x4E, 0xEB, 0x24, 0xFD, 0xFC, 0x6E, 0xC3, 0xA1, 0xD9, 0xBF, 0xF9, 0xFD,
                0x2F, 0xCF, 0x9E, 0x3D, 0xBB, 0x60, 0xFE, 0xC3, 0x29, 0xC7, 0x48, 0xFC, 0x7D, 0xF5, 0x55, 0x53, 0xD5,
                0x7D, 0xFF, 0xF3, 0x0F, 0xBB, 0xD5, 0x7D, 0xD9, 0xA0, 0x48, 0xD5, 0x9A, 0x79, 0x3E, 0xA3, 0xD3, 0x60,
                0xF6, 0xA2, 0xA8, 0x86, 0x6D, 0x6D, 0xB2, 0xCD, 0xF0, 0x7C, 0xBB, 0x84, 0xCD, 0x6E, 0xD8, 0xAB, 0x80,
                0xED, 0xA5, 0xF1, 0x79, 0xB2, 0xF9, 0x6C, 0xAF, 0x3F, 0xBF, 0xDB, 0x22, 0x9F, 0x09, 0x28, 0x93, 0x02,
                0xB9, 0xA4, 0xE4, 0x0D, 0xA2, 0x54, 0x2A, 0x03, 0x19, 0x40, 0x90, 0x95, 0xDD, 0xBF, 0x02, 0x3A, 0x65,
                0x69, 0x32, 0x20, 0x6F, 0xDB, 0xCA, 0x9B, 0x07, 0xCA, 0x20, 0xE4, 0x4D, 0x26, 0x43, 0xE4, 0xCF, 0x7B,
                0x3E, 0x2F, 0x9E, 0x5C, 0x46, 0xDB, 0x39, 0x10, 0x25, 0x87, 0x11, 0x1A, 0x8F, 0xF1, 0xE4, 0x3E, 0x97,
                0x87, 0x1C, 0x2A, 0x39, 0x99, 0x94, 0xB5, 0x34, 0x4D, 0xB8, 0xC9, 0xD0, 0xBF, 0x66, 0x84, 0x3F, 0x84,
                0xD9, 0x38, 0x43, 0xFC, 0x1A, 0x4F, 0xA5, 0x2E, 0xEE, 0x7C, 0xE6, 0x22, 0xFE, 0x32, 0xD6, 0x72, 0x06,
                0xA8, 0xFA, 0x1A, 0x20, 0x8A, 0x89, 0xEA, 0x7E, 0xBF, 0xD1, 0x19, 0xEC, 0x16, 0x8D, 0xEF, 0x8F, 0x79,
                0xE3, 0xBB, 0x53, 0x59, 0x00, 0x35, 0xC0, 0xFF, 0xFE, 0x32, 0x06, 0xA8, 0xF9, 0x2D, 0x1A, 0xE1, 0x1F,
                0x60, 0x0C, 0x03, 0x8E, 0xA7, 0xC2, 0x6B, 0xA8, 0x21, 0xFD, 0xEF, 0x18, 0x86, 0xF4, 0x13, 0x7C, 0x3C,
                0x7F, 0xC4, 0x5C, 0x80, 0x57, 0x08, 0xE6, 0xEA, 0x35, 0x2C, 0x36, 0x4C, 0x7D, 0xA6, 0xF2, 0x52, 0x3F,
                0xBE, 0xF8, 0x30, 0xBA, 0x7C, 0x05, 0xA6, 0x0E, 0x1C, 0x6C, 0x3A, 0x41, 0x84, 0x51, 0xE8, 0x7F, 0xA9,
                0xB4, 0xFF, 0x27, 0x45, 0xF8, 0x8E, 0x31, 0xB9, 0x62, 0xF1, 0xA3, 0x62, 0x25, 0xE5, 0xB0, 0xC9, 0x27,
                0xE7, 0x28, 0xBC, 0x08, 0x8C, 0x12, 0xD9, 0xDD, 0xE4, 0x49, 0x0E, 0x62, 0x10, 0x48, 0x7F, 0xEE, 0x06,
                0xF9, 0x1B, 0x5A, 0x94, 0x01, 0xB2, 0xF2, 0x39, 0x85, 0xBF, 0x60, 0x08, 0x3B, 0x60, 0x11, 0x5F, 0x83,
                0x87, 0x99, 0xAC, 0x95, 0xF3, 0x6D, 0x79, 0x99, 0x9D, 0x9C, 0xEA, 0x2C, 0xD4, 0x70, 0xCE, 0xB8, 0xF4,
                0x63, 0x09, 0xB3, 0xBB, 0xEE, 0xAC, 0x5E, 0x84, 0x88, 0x25, 0x3B, 0x27, 0x4C, 0xA4, 0xD4, 0x45, 0x51,
                0x06, 0x6B, 0x07, 0x74, 0xC1, 0x51, 0x51, 0xC5, 0xE9, 0x4E, 0xDB, 0x2B, 0x2A, 0x30, 0x97, 0xFF, 0x1E,
                0x43, 0xE0, 0x23, 0x6C, 0x31, 0x43, 0x6D, 0x58, 0x1D, 0x31, 0x10, 0x33, 0x42, 0x08, 0x63, 0xDB, 0x7C,
                0x84, 0xF8, 0x0C, 0x4B, 0xEB, 0x11, 0x4F, 0x91, 0x0F, 0x3A, 0xE6, 0x00, 0x3A, 0x23, 0xA0, 0xFA, 0xEF,
                0xCC, 0xCC, 0x9E, 0x45, 0xF3, 0x38, 0x20, 0x13, 0xFB, 0xE6, 0x23, 0x0E, 0xA1, 0x8C, 0x5D, 0x73, 0x26,
                0x25, 0x0B, 0x41, 0x25, 0x40, 0x3B, 0x16, 0x6F, 0x9F, 0x24, 0xA6, 0x13, 0x3C, 0x71, 0x47, 0x8E, 0x18,
                0x23, 0x32, 0x88, 0x0A, 0x45, 0x92, 0xD5, 0xE0, 0xF3, 0xF3, 0x53, 0x12, 0x60, 0xFA, 0xD7, 0x01, 0xA0,
                0x77, 0x14, 0x77, 0xBB, 0xE9, 0x25, 0xC4, 0x8B, 0x74, 0x42, 0x96, 0xEF, 0x75, 0xE0, 0x6F, 0x83, 0x70,
                0x68, 0xC9, 0x84, 0x0C, 0x08, 0xB6, 0x07, 0xA8, 0x18, 0xD8, 0xA6, 0x9D, 0xD5, 0xD0, 0x86, 0x57, 0x1F,
                0x61, 0x3B, 0x2E, 0x5D, 0xB9, 0x60, 0x1B, 0x30, 0x47, 0x97, 0x8C, 0x10, 0x23, 0x3F, 0x5F, 0x64, 0x4B,
                0x54, 0xF8, 0x79, 0x19, 0x10, 0x88, 0x88, 0xAD, 0x04, 0xA8, 0x9A, 0x5F, 0x23, 0x21, 0x13, 0xEB, 0x70,
                0x9F, 0x39, 0x03, 0x28, 0xC8, 0x35, 0x6F, 0x8F, 0x00, 0x28, 0xF4, 0x91, 0xCF, 0x59, 0xC6, 0x06, 0xB9,
                0xBA, 0x38, 0x27, 0xED, 0xB5, 0x33, 0x03, 0x4E, 0xEF, 0xEA, 0xB3, 0x5B, 0x5B, 0xF9, 0x73, 0x2F, 0x5B,
                0xEB, 0x7F, 0xFD, 0xAE, 0xC4, 0xC5, 0x28, 0x60, 0x4D, 0xC0, 0x17, 0x2F, 0x99, 0x01, 0xA5, 0xBD, 0xB7,
                0xEF, 0x78, 0x74, 0x45, 0xAF, 0x54, 0xB2, 0xDB, 0x34, 0x8E, 0x25, 0x76, 0x22, 0x8B, 0x1C, 0x05, 0x92,
                0x60, 0x07, 0xE4, 0x08, 0x3F, 0x49, 0x95, 0x6C, 0xB8, 0xC0, 0x04, 0x6D, 0xAE, 0x53, 0x74, 0xCB, 0x77,
                0x0A, 0x13, 0x38, 0x0A, 0x8C, 0x49, 0xAC, 0xBD, 0x6E, 0xDA, 0xE0, 0x86, 0x73, 0x04, 0xF3, 0x7F, 0x3B,
                0x9D, 0x0A, 0xC3, 0x4E, 0xD5, 0xCB, 0x40, 0x1C, 0x51, 0x11, 0x21, 0x0E, 0xDB, 0xE8, 0xF2, 0x34, 0x7B,
                0x8E, 0x51, 0x7B, 0x7D, 0x52, 0xD9, 0xA5, 0x81, 0xBE, 0xDA, 0x3E, 0x07, 0xB1, 0x60, 0xF9, 0x1E, 0x71,
                0x7A, 0x3F, 0xC7, 0x74, 0x18, 0x61, 0xF4, 0xA0, 0x0C, 0x2C, 0xFB, 0x40, 0x45, 0x3C, 0xD6, 0x76, 0xD3,
                0xD6, 0xCC, 0x04, 0x72, 0x39, 0x52, 0x85, 0x6B, 0x14, 0x91, 0xB3, 0x78, 0x79, 0x41, 0x66, 0x55, 0x2B,
                0xD2, 0x00, 0x58, 0x6C, 0xAB, 0xC9, 0x99, 0xDD, 0x1D, 0xEC, 0x92, 0x20, 0xFB, 0x3E, 0x33, 0x2C, 0x6E,
                0xA3, 0x12, 0x01, 0x6E, 0x85, 0xCA, 0x90, 0x67, 0x50, 0xB5, 0x4A, 0xD4, 0x35, 0x1A, 0x63, 0x52, 0x88,
                0xD9, 0x1A, 0x0C, 0x0B, 0x43, 0x70, 0x77, 0x60, 0xAB, 0x8C, 0x71, 0xAE, 0x9D, 0xC9, 0x6D, 0xAE, 0x34,
                0x2B, 0x35, 0x5C, 0xB0, 0xD5, 0x4E, 0x9D, 0x17, 0x73, 0xB3, 0xDD, 0x5B, 0x07, 0x29, 0xED, 0xCE, 0xFA,
                0xF3, 0xA4, 0xBB, 0xFE, 0xEC, 0x76, 0xDD, 0x17, 0xF3, 0x0E, 0x6F, 0xE9, 0x76, 0xEB, 0xCA, 0x5D, 0xB7,
                0xDE, 0xD8, 0x70, 0xB7, 0x36, 0x35, 0xF5, 0x5A, 0x6D, 0x13, 0x5C, 0x76, 0x5B, 0xFB, 0xB0, 0x17, 0x21,
                0x21, 0x6C, 0x34, 0x26, 0xE6, 0xB0, 0x20, 0xE4, 0x28, 0x88, 0x6E, 0xA7, 0xA3, 0x39, 0xBE, 0x30, 0x56,
                0xFF, 0xAB, 0xA2, 0xA5, 0x78, 0x31, 0x18, 0x7A, 0xE6, 0x62, 0xDA, 0xAC, 0xDD, 0x5A, 0x85, 0x6F, 0x79,
                0x81, 0x42, 0x34, 0xC3, 0x37, 0x71, 0x38, 0xC6, 0x7C, 0xB5, 0x8B, 0x9E, 0xB3, 0x98, 0x9A, 0xA7, 0x81,
                0x16, 0xD0, 0x74, 0x93, 0xDC, 0x03, 0x39, 0x0C, 0xFE, 0x73, 0x23, 0x80, 0x7A, 0x05, 0xB3, 0xD8, 0x47,
                0xE4, 0x94, 0x44, 0x73, 0x64, 0x58, 0x89, 0x4E, 0x29, 0x22, 0x59, 0x42, 0x5A, 0x2B, 0x6C, 0x7C, 0xDA,
                0x0B, 0x46, 0xE5, 0x0D, 0x9A, 0x9D, 0x8E, 0x59, 0x2C, 0x21, 0x7A, 0x60, 0x7C, 0x52, 0xB2, 0x51, 0x66,
                0x25, 0xFC, 0x36, 0x64, 0xD2, 0xC6, 0xD1, 0x7E, 0x1B, 0x46, 0x72, 0x79, 0xAE, 0x2E, 0xBD, 0x9D, 0x13,
                0x8C, 0xB8, 0xD8, 0xF2, 0x0A, 0x4B, 0xB6, 0x85, 0xB7, 0xFA, 0xC4, 0x5A, 0x65, 0xA1, 0x45, 0x3F, 0xA0,
                0x41, 0x68, 0xCE, 0x5C, 0x39, 0x6F, 0x97, 0x48, 0x67, 0xC2, 0x0B, 0xB8, 0xDB, 0x6A, 0x0B, 0x8E, 0xF0,
                0x2D, 0x04, 0x49, 0x8F, 0xD5, 0xF6, 0x20, 0x51, 0x18, 0x61, 0x45, 0x56, 0x1B, 0xE5, 0x3E, 0x82, 0xB0,
                0xA7, 0xAF, 0x6D, 0x75, 0x8E, 0x23, 0x90, 0x77, 0xA3, 0xD1, 0xF3, 0xA7, 0xB3, 0x9D, 0x9B, 0x77, 0x56,
                0x46, 0xA6, 0xBB, 0xB6, 0x2C, 0xF5, 0xD6, 0xDA, 0xB2, 0xF4, 0x36, 0x46, 0xA6, 0x5D, 0xEF, 0x16, 0x24,
                0x45, 0xF2, 0x12, 0x52, 0x59, 0xDE, 0x22, 0xCC, 0x22, 0x82, 0x3D, 0xC1, 0xFD, 0x5C, 0xFE, 0xCC, 0x2C,
                0x0F, 0x6C, 0x14, 0x1E, 0x81, 0x50, 0x8C, 0xAC, 0xD9, 0xCB, 0x4B, 0x89, 0x66, 0x21, 0xE8, 0x69, 0x0B,
                0x92, 0x57, 0x3E, 0xB4, 0x95, 0x4B, 0x42, 0xC0, 0xA0, 0x17, 0x9A, 0x66, 0x3F, 0x27, 0xFF, 0xB8, 0x35,
                0x0C, 0x8E, 0x85, 0x2A, 0x0F, 0x21, 0x10, 0xBE, 0xE6, 0x24, 0xAB, 0xF2, 0xEF, 0x74, 0x31, 0xA2, 0x0E,
                0xEF, 0x4B, 0xF2, 0x81, 0x9B, 0x4B, 0x51, 0x15, 0x75, 0x3C, 0xC6, 0xC5, 0x2C, 0xDB, 0x86, 0xAD, 0x17,
                0x87, 0x9C, 0x91, 0x28, 0xDE, 0xA7, 0x04, 0xCD, 0x84, 0x1D, 0xFB, 0x6D, 0x5B, 0xAE, 0x0E, 0x6D, 0xE8,
                0xC0, 0xFE, 0x22, 0x98, 0xC8, 0x79, 0x21, 0xFB, 0x49, 0x65, 0xC7, 0xCA, 0xBF, 0x68, 0x74, 0x4A, 0xCB,
                0x38, 0x76, 0x11, 0x4D, 0x57, 0x40, 0x55, 0x17, 0x25, 0x03, 0xCB, 0xE8, 0xBB, 0x4F, 0x1E, 0x3D, 0xC1,
                0xB8, 0x52, 0x42, 0x12, 0x87, 0x85, 0xF7, 0x79, 0xF3, 0xCA, 0x69, 0x36, 0x58, 0x24, 0x7C, 0x30, 0x46,
                0x60, 0x59, 0x2A, 0x0A, 0x72, 0x8A, 0xF2, 0xCD, 0x15, 0x4B, 0x5E, 0x62, 0x14, 0x7E, 0x46, 0x0B, 0x5E,
                0xF5, 0x12, 0x62, 0xB5, 0x81, 0xC2, 0xA4, 0x99, 0x9B, 0x6E, 0xC3, 0xA2, 0xAF, 0x5C, 0xE0, 0xC9, 0x17,
                0x63, 0x2E, 0x9A, 0x5F, 0xB6, 0xB9, 0x68, 0x7D, 0x3A, 0xF6, 0x1D, 0xCC, 0x45, 0xB3, 0xD5, 0x76, 0x5C,
                0xFD, 0xED, 0xAE, 0x23, 0xA0, 0x57, 0xFB, 0xDD, 0x58, 0x8B, 0x99, 0xCA, 0xC5, 0xED, 0x69, 0x2E, 0xEA,
                0x9F, 0xD0, 0x5A, 0xD4, 0xF7, 0xB5, 0x16, 0xF5, 0x3C, 0x29, 0x7E, 0xE9, 0xEE, 0x45, 0xE3, 0xE8, 0x16,
                0xA8, 0xF3, 0xFF, 0xD2, 0x02, 0x7D, 0x29, 0x36, 0xED, 0xC4, 0xD1, 0x40, 0x75, 0xBB, 0xBF, 0xB6, 0x09,
                0x74, 0x06, 0x74, 0x9A, 0xBF, 0x1B, 0x9B, 0x19, 0x86, 0x2C, 0x52, 0x51, 0xAA, 0xB0, 0xB2, 0x9B, 0xD1,
                0x63, 0xE4, 0xAD, 0x4F, 0xD0, 0x45, 0x90, 0x9F, 0xEE, 0xCA, 0x3F, 0xE7, 0x26, 0x8C, 0x3D, 0x78, 0x53,
                0xC6, 0x3D, 0xED, 0xD3, 0x85, 0x62, 0x66, 0x59, 0x3D, 0x5D, 0x40, 0x25, 0x0C, 0xC7, 0xDC, 0x92, 0x4A,
                0xEE, 0x2C, 0x38, 0xD7, 0x04, 0x64, 0xD8, 0x48, 0x76, 0x1A, 0x14, 0x45, 0x24, 0xF0, 0x91, 0x9A, 0x3E,
                0x0B, 0x56, 0x2A, 0x72, 0x55, 0xFA, 0x20, 0xE9, 0x1A, 0xAC, 0x76, 0x4E, 0x8C, 0x6E, 0x28, 0x46, 0x1A,
                0xFD, 0xAB, 0x86, 0x23, 0x34, 0x1E, 0x80, 0xB5, 0x17, 0x15, 0xCF, 0xEB, 0x18, 0xE0, 0x75, 0x1F, 0xEE,
                0xD0, 0xAB, 0x19, 0x65, 0x1C, 0xEF, 0x87, 0x4D, 0x79, 0xBE, 0x9D, 0x4E, 0x49, 0x40, 0x35, 0x8D, 0x8F,
                0x81, 0x08, 0xC6, 0x04, 0x3B, 0xF1, 0xED, 0x08, 0x37, 0x05, 0xBC, 0x1E, 0x77, 0x61, 0x86, 0xD6, 0x42,
                0x36, 0x7D, 0xBD, 0x23, 0x1B, 0x09, 0x5B, 0xD7, 0x1C, 0xE7, 0x3A, 0xFF, 0x5A, 0xEF, 0x6C, 0x4A, 0x47,
                0x8C, 0xAC, 0x6C, 0xA7, 0xE6, 0x9C, 0xE0, 0xD4, 0x8C, 0x59, 0x65, 0x82, 0xDE, 0x63, 0x12, 0x9D, 0xC5,
                0x52, 0x5A, 0xE6, 0xA3, 0x54, 0xF3, 0xE1, 0x52, 0x48, 0x1C, 0x96, 0xA6, 0xD5, 0x54, 0xB3, 0x74, 0xBC,
                0xB0, 0x63, 0xDE, 0x46, 0x99, 0x87, 0xA1, 0x4A, 0x92, 0x6A, 0xEF, 0xC1, 0x74, 0x98, 0xF9, 0x48, 0xA1,
                0x53, 0xDA, 0x36, 0x67, 0x63, 0x1B, 0xA4, 0x3A, 0x3A, 0xB1, 0x86, 0x18, 0xD7, 0x5E, 0xEF, 0xF0, 0x0C,
                0x53, 0x3B, 0x20, 0x53, 0xA7, 0x4E, 0x17, 0x81, 0x50, 0x19, 0xC0, 0xE1, 0x42, 0x55, 0x0F, 0x80, 0x09,
                0xB8, 0x9F, 0x07, 0xF0, 0xB7, 0x08, 0xAC, 0x81, 0x34, 0xAD, 0x72, 0x39, 0xA1, 0x47, 0xCC, 0xAF, 0xE8,
                0x94, 0x25, 0xE7, 0xB8, 0xD9, 0xD3, 0xA5, 0x8A, 0x5C, 0xF1, 0x1A, 0xAB, 0x4E, 0xB5, 0xB6, 0x91, 0x75,
                0x37, 0x64, 0x5E, 0xA1, 0x41, 0x05, 0x91, 0x64, 0xDD, 0x5F, 0x51, 0x9F, 0xC1, 0xDC, 0xCD, 0x32, 0x32,
                0xD3, 0xCD, 0x2A, 0xCF, 0x48, 0x12, 0x02, 0xB7, 0xB1, 0x9C, 0x31, 0x7B, 0x02, 0x59, 0x65, 0x54, 0x63,
                0x28, 0x58, 0x77, 0x19, 0xAB, 0xAC, 0x6A, 0x5B, 0x94, 0xA8, 0x54, 0x5B, 0xF5, 0x7D, 0x63, 0x59, 0x83,
                0x64, 0xB1, 0xD0, 0xAE, 0xA8, 0x88, 0x92, 0x77, 0xCF, 0x80, 0x09, 0xC9, 0x19, 0x21, 0xB8, 0xEA, 0x14,
                0xF9, 0x8A, 0x3E, 0x62, 0xAA, 0xAE, 0xE7, 0x54, 0x9E, 0x25, 0x5F, 0x89, 0x51, 0x10, 0xBD, 0x2D, 0xBD,
                0x19, 0xB5, 0x45, 0xFB, 0x67, 0xCA, 0x16, 0xD0, 0x78, 0x86, 0x2B, 0x69, 0x5F, 0xC3, 0x80, 0x0D, 0xB1,
                0x5B, 0x1E, 0xD0, 0x5D, 0x33, 0x26, 0x93, 0xD5, 0x6C, 0x97, 0x67, 0xEE, 0xA3, 0xA8, 0xF0, 0xA4, 0x79,
                0x00, 0x72, 0x97, 0xD9, 0xF4, 0xB2, 0x7A, 0x9C, 0x6A, 0xC5, 0x87, 0xFE, 0xF1, 0x9F, 0xEB, 0xAD, 0xB5,
                0x49, 0xEC, 0xB5, 0x0A, 0x32, 0xC4, 0x39, 0x84, 0x84, 0x99, 0x8D, 0x4F, 0x28, 0x75, 0x7A, 0x1B, 0x8B,
                0xDA, 0x6A, 0x14, 0x90, 0x32, 0x6F, 0x63, 0x2D, 0x18, 0x87, 0xBD, 0x3C, 0x44, 0xE0, 0xD9, 0xF8, 0x88,
                0xE0, 0x92, 0x75, 0xB9, 0x03, 0xE5, 0x78, 0xA6, 0xF7, 0x7E, 0x5B, 0xAC, 0x39, 0x82, 0x0C, 0x56, 0x29,
                0x94, 0xC7, 0xB2, 0x27, 0xC0, 0xC9, 0x70, 0x5E, 0xD5, 0x5E, 0xF7, 0x6A, 0x8D, 0x66, 0xAB, 0xF5, 0xF2,
                0x55, 0xBD, 0xDD, 0x7C, 0xDD, 0xA8, 0x37, 0x4E, 0x4E, 0x4E, 0x4A, 0x67, 0xC6, 0x18, 0x4E, 0x31, 0xD9,
                0xF5, 0x6C, 0x17, 0xD5, 0x28, 0x1A, 0xBB, 0xAF, 0x32, 0x1F, 0xF7, 0x8A, 0x2A, 0x10, 0xB5, 0xDD, 0xB1,
                0x15, 0xE6, 0x5A, 0x19, 0xDA, 0x89, 0x0B, 0x22, 0xA9, 0x5C, 0x79, 0x8F, 0x91, 0x79, 0x00, 0xB4, 0xA5,
                0xA8, 0xE5, 0xEB, 0xB4, 0x8F, 0x84, 0x80, 0xBF, 0x0D, 0x3E, 0x0E, 0xCE, 0x90, 0x94, 0x04, 0x3F, 0x60,
                0x1C, 0xD9, 0x69, 0xB0, 0x3A, 0xDB, 0x41, 0x51, 0x8E, 0xFE, 0x9A, 0x02, 0xDF, 0x95, 0x74, 0x63, 0xD7,
                0x7A, 0x57, 0x70, 0x18, 0x08, 0x55, 0x09, 0x37, 0x5C, 0xBD, 0xA3, 0x68, 0x71, 0x02, 0x9C, 0x42, 0x2A,
                0xD7, 0x7A, 0x9F, 0xC5, 0x02, 0x27, 0x67, 0xD2, 0x36, 0x9B, 0xB0, 0x6E, 0x0E, 0x2B, 0xFD, 0x41, 0x59,
                0x2A, 0x2E, 0x2D, 0xAB, 0x8B, 0x34, 0x4A, 0x1D, 0x55, 0xA9, 0xFD, 0x77, 0x6B, 0x3F, 0x2A, 0x1C, 0xC1,
                0xCD, 0xF9, 0x07, 0x2B, 0x29, 0xDC, 0x0C, 0xCE, 0x75, 0x89, 0xC1, 0x21, 0x55, 0x2B, 0x3B, 0xAA, 0xFD,
                0xB2, 0xDE, 0x6C, 0xAF, 0x4B, 0x56, 0x3A, 0xEB, 0xB3, 0x6F, 0x7B, 0x2F, 0x4B, 0xD5, 0x16, 0x59, 0x88,
                0xE9, 0x06, 0xE3, 0xC9, 0x3B, 0x0E, 0x7F, 0x28, 0xEB, 0x69, 0x35, 0x5C, 0x70, 0x69, 0x61, 0x87, 0x06,
                0x27, 0xCB, 0xE2, 0x04, 0xF3, 0x96, 0x12, 0xB5, 0x7F, 0x2F, 0xFA, 0xCB, 0x11, 0x48, 0x58, 0x3F, 0x3F,
                0x67, 0x79, 0x0E, 0x39, 0xB8, 0xDC, 0x36, 0xCF, 0x85, 0x2D, 0x31, 0x7F, 0xB0, 0x60, 0x45, 0x35, 0x1B,
                0x23, 0x7E, 0x5A, 0x7A, 0x85, 0x76, 0x87, 0xB4, 0x54, 0x0E, 0xF8, 0x3D, 0x9D, 0x54, 0xF2, 0x20, 0x0F,
                0xF0, 0xB1, 0x37, 0x05, 0x4B, 0xB5, 0x8D, 0xF8, 0x1B, 0xEB, 0x1D, 0xA1, 0xB1, 0x76, 0xB7, 0xED, 0xA5,
                0x0F, 0x0C, 0xD9, 0x4D, 0x9E, 0xBE, 0x57, 0x09, 0x22, 0x8A, 0x4E, 0x27, 0xE0, 0x2B, 0x59, 0x28, 0xCC,
                0x06, 0x71, 0xBB, 0xA0, 0x99, 0xD0, 0xA2, 0x1A, 0x61, 0xDD, 0x38, 0x2D, 0x00, 0xB4, 0x1B, 0x02, 0xF8,
                0x09, 0x1C, 0x05, 0x5A, 0x00, 0xAA, 0x90, 0xB9, 0x28, 0x08, 0x15, 0xA0, 0x87, 0x1E, 0x68, 0x80, 0x27,
                0x24, 0x92, 0xC5, 0x25, 0xA8, 0x15, 0xF3, 0x6A, 0x74, 0xA6, 0x8B, 0x8A, 0x8F, 0xDC, 0x5B, 0x46, 0x63,
                0x63, 0x31, 0xBF, 0xC1, 0x8B, 0xA4, 0x3A, 0x75, 0xC4, 0x46, 0x2C, 0xB2, 0xF3, 0x83, 0x06, 0x8F, 0x83,
                0x33, 0x15, 0x62, 0xC5, 0xD1, 0x00, 0xDC, 0xD6, 0xAA, 0xD9, 0x7B, 0x1C, 0x9C, 0x83, 0x6B, 0x29, 0xB1,
                0x5D, 0xDB, 0xA1, 0x3E, 0x3D, 0xBE, 0xD3, 0xE9, 0x5A, 0x4B, 0x04, 0x8C, 0x3F, 0x16, 0x16, 0x6D, 0xF5,
                0x38, 0xFF, 0x8D, 0xC5, 0x9C, 0x22, 0xF2, 0x8E, 0xB0, 0x31, 0x22, 0xE7, 0x96, 0xB7, 0x22, 0xD2, 0xC7,
                0x91, 0x7F, 0x51, 0x04, 0x36, 0x69, 0xE7, 0x56, 0x49, 0x6C, 0xBD, 0x86, 0x42, 0x84, 0x10, 0x11, 0xAC,
                0xBE, 0xB2, 0xE8, 0x57, 0x75, 0x3B, 0x34, 0x23, 0xA0, 0xA0, 0x74, 0x2F, 0x70, 0x04, 0x53, 0x52, 0x98,
                0xB8, 0x31, 0x53, 0x99, 0x9A, 0xF8, 0xE6, 0x0D, 0x63, 0x9D, 0x25, 0x2F, 0x48, 0x78, 0xAD, 0xF6, 0xF7,
                0x4E, 0xDE, 0x03, 0xA6, 0xDB, 0x6D, 0x1A, 0xED, 0xCA, 0x36, 0xED, 0x5A, 0x25, 0x9D, 0x66, 0xBD, 0x57,
                0xDF, 0xAD, 0x8A, 0xD8, 0x64, 0x1A, 0x2B, 0x16, 0x94, 0x96, 0xFA, 0x70, 0x8E, 0x0A, 0x2B, 0xCF, 0x73,
                0x9A, 0x8F, 0x38, 0xF2, 0x1F, 0xD6, 0xA1, 0x4C, 0x91, 0x4F, 0x99, 0xD0, 0xD3, 0x8B, 0x14, 0x96, 0xCE,
                0x39, 0xE3, 0xD4, 0xF0, 0xCF, 0x52, 0x07, 0x7E, 0x93, 0xD3, 0x38, 0xB1, 0xC9, 0x63, 0x98, 0xAB, 0xD3,
                0xE4, 0xA4, 0x0F, 0x41, 0x2B, 0x2A, 0xC9, 0xED, 0x14, 0x02, 0x13, 0x83, 0x98, 0x39, 0x5B, 0xAD, 0xAA,
                0xD7, 0xBF, 0x43, 0xC1, 0xA4, 0x60, 0xAF, 0x31, 0xD5, 0x2C, 0xC9, 0xDE, 0x96, 0x9F, 0xF8, 0xDA, 0x5D,
                0x19, 0xEA, 0xED, 0x4C, 0xD1, 0xCB, 0x9C, 0x7F, 0xB3, 0xDF, 0x9A, 0x80, 0x6A, 0x10, 0xE1, 0x03, 0xB6,
                0xCB, 0x56, 0xF3, 0x64, 0x93, 0x94, 0x5A, 0x97, 0xEE, 0xF4, 0x9A, 0x1B, 0x59, 0xF6, 0xF6, 0xE1, 0x4A,
                0x45, 0x36, 0xC5, 0x3E, 0x87, 0x29, 0xC1, 0x3B, 0x55, 0xD6, 0xCE, 0x87, 0x58, 0xAA, 0x5C, 0x8A, 0xA7,
                0x32, 0x35, 0x69, 0xA4, 0xBD, 0x95, 0x4B, 0x2A, 0x77, 0x2E, 0x86, 0x03, 0x55, 0x4B, 0x7C, 0x2A, 0x25,
                0x0F, 0xC6, 0x47, 0x4A, 0x14, 0x14, 0x5C, 0xE7, 0xC9, 0x55, 0x90, 0x11, 0x1A, 0x0F, 0xCB, 0x9E, 0x45,
                0xAF, 0x98, 0xAF, 0x84, 0xFB, 0xE1, 0x43, 0x40, 0x88, 0x38, 0x2E, 0xF7, 0x3B, 0x77, 0x75, 0xEC, 0xD9,
                0xAF, 0xBB, 0xB0, 0x0F, 0x0E, 0x29, 0x13, 0xA7, 0x74, 0x72, 0x3A, 0x0E, 0x88, 0xBE, 0xBE, 0xF6, 0x39,
                0x08, 0xA0, 0x51, 0xB2, 0x73, 0x24, 0x1C, 0x8F, 0x02, 0xA5, 0x7A, 0xDB, 0xB8, 0xA6, 0xC3, 0xC8, 0xF3,
                0x72, 0x3C, 0xBF, 0x96, 0xDC, 0x2A, 0x99, 0x31, 0x77, 0xFD, 0x5F, 0x57, 0x00, 0x76, 0xAC, 0x7C, 0x0E,
                0x73, 0x92, 0xBC, 0x9F, 0xF8, 0x59, 0xAC, 0xA8, 0x5A, 0x89, 0x3E, 0xAE, 0x8A, 0x80, 0x13, 0x76, 0x37,
                0x7A, 0xB9, 0x97, 0x35, 0xB9, 0x07, 0xC7, 0xD2, 0x22, 0x3C, 0x50, 0x29, 0x77, 0x9D, 0xDB, 0x80, 0x79,
                0x58, 0xF9, 0xE2, 0xAB, 0xBB, 0x26, 0xB9, 0xB6, 0x5A, 0x01, 0x74, 0xF4, 0x5F, 0x71, 0xA5, 0x6A, 0xAB,
                0x1B, 0x08, 0x56, 0x12, 0x57, 0xD7, 0xCA, 0x2B, 0xD9, 0x8A, 0x6D, 0x9C, 0x37, 0xB4, 0xB6, 0x11, 0xF6,
                0x6D, 0x0A, 0x50, 0x6B, 0xAD, 0xF5, 0x86, 0xD6, 0xEC, 0xDA, 0x65, 0xBC, 0x46, 0xEC, 0x01, 0xD3, 0x7D,
                0x63, 0x1B, 0x23, 0xE3, 0x5A, 0xAF, 0xF0, 0x2E, 0x98, 0x12, 0xBD, 0x44, 0x45, 0xC6, 0xD7, 0xDE, 0xB9,
                0x68, 0x18, 0xB5, 0xB7, 0xCD, 0xA3, 0xE5, 0x3E, 0x8C, 0x91, 0x34, 0x3E, 0xD9, 0x48, 0x4E, 0x1A, 0xB9,
                0x23, 0xD9, 0x7C, 0xDB, 0x8D, 0x24, 0xA3, 0xBC, 0xE9, 0x38, 0x54, 0xDE, 0x62, 0xB5, 0x4B, 0x6D, 0xB6,
                0x8A, 0x92, 0x03, 0x10, 0x13, 0xA8, 0xEE, 0x20, 0xC2, 0x32, 0xA1, 0xC9, 0xF6, 0x61, 0x94, 0xE5, 0x34,
                0x1D, 0xC0, 0xD9, 0xB5, 0x6E, 0xF0, 0x50, 0x77, 0xE2, 0x21, 0x2D, 0xFE, 0xDF, 0xA2, 0x62, 0xCD, 0xCA,
                0x87, 0x68, 0xA6, 0xAE, 0x22, 0x6E, 0x8D, 0xA4, 0x24, 0x5B, 0x98, 0x8F, 0xDF, 0xEA, 0xBE, 0x1C, 0xBF,
                0x68, 0x5E, 0xE4, 0x1C, 0xDD, 0x55, 0x60, 0x92, 0x2C, 0x93, 0xDE, 0x50, 0x54, 0x0A, 0xCC, 0x2A, 0x2E,
                0xD0, 0x38, 0x42, 0x06, 0x58, 0x5A, 0xB3, 0x76, 0x01, 0xAE, 0x74, 0x88, 0x48, 0x7A, 0x32, 0x65, 0xDD,
                0xCB, 0x5B, 0x88, 0x84, 0x66, 0xCB, 0xCC, 0x79, 0x5A, 0x49, 0xEB, 0x6B, 0xE6, 0x23, 0x32, 0xC2, 0x4A,
                0x6A, 0x04, 0x89, 0xB9, 0x2D, 0x6F, 0x7D, 0xF5, 0x2A, 0x59, 0x62, 0x74, 0xCF, 0xCD, 0xB4, 0x5F, 0x15,
                0x6C, 0x79, 0x81, 0x25, 0x0A, 0x88, 0xFD, 0x68, 0xFA, 0xE9, 0x5D, 0xCE, 0x31, 0xE2, 0x0E, 0x98, 0xEB,
                0x4C, 0x59, 0x5C, 0x75, 0x7B, 0x73, 0x77, 0xAD, 0x6C, 0x7E, 0x4B, 0x87, 0x3E, 0xC7, 0x98, 0xAE, 0x1E,
                0xCB, 0xB6, 0x1D, 0xBC, 0xD2, 0x95, 0xF7, 0xB0, 0x59, 0x83, 0xDA, 0xDC, 0x21, 0xFA, 0xE0, 0xA6, 0xA7,
                0x99, 0xCC, 0xD9, 0x5E, 0xA0, 0x2B, 0x7A, 0x19, 0x3C, 0x0D, 0x98, 0x08, 0x4A, 0xA3, 0x98, 0x6D, 0x12,
                0x5A, 0xCB, 0x2F, 0x96, 0x14, 0x93, 0xE4, 0xA1, 0x30, 0x6B, 0x86, 0x35, 0xF0, 0x8A, 0x4E, 0x54, 0x35,
                0x0A, 0xE3, 0xE2, 0x8A, 0xA6, 0xC7, 0x19, 0xB6, 0xF8, 0x75, 0xC8, 0x66, 0x0B, 0x18, 0xCE, 0x03, 0x4C,
                0x26, 0xA2, 0xF2, 0x5E, 0x9D, 0xDE, 0x49, 0xB5, 0xE6, 0x9E, 0x72, 0xCE, 0x16, 0xB6, 0xE4, 0x13, 0x88,
                0xBE, 0x79, 0x24, 0x5C, 0x31, 0x59, 0x95, 0xB7, 0x02, 0xED, 0x6A, 0xBD, 0x1D, 0x0C, 0xF4, 0x8B, 0x28,
                0x87, 0xB0, 0xB8, 0x3A, 0xAB, 0x00, 0x99, 0x5D, 0x32, 0x56, 0x90, 0xCC, 0xAA, 0xB1, 0x42, 0x08, 0x87,
                0xAB, 0xEF, 0x1A, 0x85, 0x51, 0xA8, 0xEF, 0x39, 0xD9, 0x76, 0xF3, 0x31, 0xF0, 0x41, 0xCD, 0xE4, 0xF2,
                0x66, 0x70, 0xEE, 0x38, 0xED, 0x06, 0xD2, 0x79, 0xEE, 0x0D, 0xAC, 0xD3, 0x34, 0x1A, 0xB8, 0x1B, 0xFD,
                0x8E, 0xA5, 0x23, 0x2E, 0x59, 0xDF, 0x7B, 0x0E, 0x34, 0x01, 0xEF, 0x3D, 0xD6, 0x04, 0xBE, 0xD7, 0x70,
                0x13, 0xE8, 0x5E, 0x23, 0x1E, 0xA9, 0x22, 0xD8, 0xBC, 0x84, 0xC0, 0x96, 0x8B, 0xA8, 0x32, 0x17, 0x17,
                0x78, 0x1C, 0xCF, 0x4A, 0x53, 0x3D, 0xDA, 0x04, 0x27, 0x76, 0xCD, 0x4B, 0x6F, 0x08, 0x66, 0x07, 0x54,
                0xB8, 0x73, 0xEA, 0x5A, 0x1B, 0xD8, 0x63, 0x77, 0xEC, 0x69, 0x92, 0x7A, 0x6C, 0x77, 0x57, 0xB7, 0x9E,
                0x5F, 0x9E, 0x74, 0xDA, 0x39, 0x7E, 0xE1, 0x16, 0xBB, 0x2B, 0x72, 0x76, 0xF1, 0x08, 0x38, 0xB4, 0x36,
                0xC1, 0x94, 0x44, 0x76, 0xA7, 0x44, 0xC9, 0x9A, 0xAC, 0x8C, 0xBB, 0xF2, 0x40, 0xC2, 0x12, 0x6B, 0xCE,
                0x9D, 0x5A, 0xD3, 0xBA, 0x68, 0xCF, 0x78, 0x12, 0xA6, 0x44, 0x94, 0xAA, 0xF9, 0x31, 0x4E, 0xDF, 0x8C,
                0xFC, 0x66, 0x77, 0xFD, 0x10, 0x54, 0xB7, 0x53, 0x1D, 0x79, 0xFD, 0x8C, 0x71, 0x94, 0x2A, 0x07, 0x0C,
                0x51, 0x8F, 0x64, 0xDF, 0x18, 0x6C, 0x14, 0xD8, 0x1C, 0x92, 0xE9, 0x30, 0x4F, 0x9F, 0x4C, 0x5A, 0x49,
                0x8F, 0x2D, 0x30, 0x3F, 0x4B, 0xAA, 0x01, 0x69, 0x6C, 0x43, 0x5E, 0x39, 0xC9, 0xA0, 0xB7, 0xF2, 0x57,
                0xBF, 0x79, 0xB9, 0x39, 0xEF, 0xEC, 0x19, 0xF7, 0xA7, 0x8D, 0xE7, 0xA8, 0x5A, 0x9D, 0xBD, 0x6F, 0x5E,
                0x4A, 0x35, 0x0A, 0x2F, 0x84, 0xA8, 0x23, 0x79, 0xA7, 0x4A, 0x31, 0x69, 0x71, 0x2C, 0x63, 0x96, 0xD3,
                0x36, 0xEC, 0xE5, 0xA6, 0xE3, 0x0A, 0x65, 0x53, 0x0E, 0xD0, 0xC4, 0x66, 0xAF, 0x91, 0x53, 0x62, 0xD9,
                0xEB, 0x6C, 0x6E, 0x99, 0x37, 0xDD, 0x63, 0x61, 0xCD, 0x99, 0x8D, 0xD0, 0x17, 0x18, 0x3D, 0xE8, 0xD7,
                0x96, 0x4A, 0x0D, 0xE2, 0x07, 0x81, 0x6F, 0xF0, 0x42, 0x67, 0x54, 0x2E, 0x63, 0xEA, 0xDB, 0x58, 0xE7,
                0x8F, 0x2C, 0xF0, 0xF1, 0x90, 0x4E, 0x2E, 0x9F, 0x32, 0x0B, 0xBA, 0xF8, 0x88, 0xC3, 0x32, 0x17, 0xA4,
                0xCB, 0x7B, 0xEC, 0x32, 0xF6, 0x08, 0x4D, 0x31, 0x92, 0xB0, 0x40, 0x29, 0x84, 0x3E, 0x15, 0x0F, 0x94,
                0x67, 0x81, 0x9B, 0xD7, 0x91, 0x3C, 0xC2, 0x38, 0xDE, 0x17, 0xAB, 0x1F, 0x36, 0x5B, 0xE9, 0x58, 0xE5,
                0xE6, 0x61, 0x22, 0xD3, 0x25, 0x36, 0x65, 0x7E, 0x2C, 0x2A, 0x81, 0x63, 0xF0, 0x84, 0xCA, 0x7F, 0x51,
                0xE7, 0x56, 0xF3, 0x99, 0xC7, 0x71, 0xA4, 0x2A, 0xF6, 0xC7, 0xBA, 0xCC, 0xD6, 0x06, 0xE4, 0xEB, 0x47,
                0x64, 0x3C, 0x60, 0x2E, 0xB6, 0x9A, 0x86, 0x55, 0x7B, 0xA3, 0x8A, 0x79, 0xF5, 0xC0, 0xE9, 0x69, 0xFF,
                0xED, 0xDD, 0xA9, 0xD7, 0xBC, 0xBB, 0xF0, 0xAE, 0x6F, 0xCF, 0x7F, 0xDE, 0xC9, 0x93, 0x66, 0xA8, 0xF8,
                0x1E, 0x52, 0xAF, 0xFC, 0x3C, 0x45, 0x9E, 0x6D, 0xA0, 0x07, 0x10, 0x3F, 0x79, 0x4B, 0xC1, 0xBE, 0xB9,
                0x2E, 0x93, 0xF4, 0x7C, 0x4C, 0x25, 0xB6, 0xF2, 0x77, 0x00, 0x34, 0x4D, 0x53, 0x23, 0x5E, 0xF2, 0x96,
                0xB0, 0x67, 0xE9, 0x29, 0x01, 0x32, 0x07, 0x50, 0xC1, 0xE0, 0x3C, 0xC9, 0x9F, 0xB8, 0x77, 0x45, 0xF0,
                0x54, 0xBA, 0x36, 0xCF, 0x48, 0xD8, 0xA2, 0xBD, 0xD4, 0x3B, 0xFD, 0x6A, 0x12, 0x5D, 0x90, 0x0B, 0xDB,
                0x9A, 0x64, 0x00, 0x84, 0xE0, 0xE5, 0x79, 0x12, 0x36, 0x5F, 0x87, 0x69, 0xA3, 0x88, 0x32, 0x97, 0x69,
                0xE6, 0x2A, 0x3E, 0x72, 0x98, 0xAE, 0xA4, 0xBD, 0xC3, 0x7C, 0x25, 0x80, 0xBD, 0x26, 0x2C, 0x81, 0xBA,
                0xCC, 0x98, 0x2A, 0xA8, 0x8C, 0xA3, 0x55, 0x37, 0x04, 0x0C, 0xE0, 0x54, 0xED, 0x8C, 0xD9, 0x8B, 0x81,
                0x15, 0x05, 0xDD, 0x1B, 0x32, 0x91, 0xDA, 0x22, 0x6C, 0xBB, 0x16, 0xC9, 0x71, 0x42, 0xDD, 0xB6, 0xBD,
                0xCB, 0xEA, 0x9E, 0x23, 0xEE, 0xEB, 0xCA, 0x15, 0x2F, 0xE2, 0x58, 0xC0, 0x3C, 0xE2, 0x49, 0x20, 0x99,
                0x33, 0xD8, 0xC1, 0xA0, 0x03, 0x0A, 0xA4, 0xAC, 0x9E, 0x81, 0x72, 0x46, 0x09, 0x7D, 0x2D, 0xC1, 0xDB,
                0x7A, 0xB8, 0xA8, 0x4C, 0xD2, 0xBA, 0x22, 0x52, 0x5B, 0xCD, 0xD4, 0x36, 0x3B, 0xD8, 0xF5, 0x14, 0xCC,
                0x99, 0x70, 0x1B, 0x9F, 0xCA, 0xAB, 0x6E, 0x8A, 0x5A, 0x94, 0xD7, 0x64, 0xDB, 0x1B, 0x03, 0x51, 0xFF,
                0x12, 0x63, 0xEA, 0xAB, 0xDF, 0x58, 0x91, 0x66, 0x74, 0xDC, 0x18, 0x56, 0x4F, 0xF2, 0x38, 0x6C, 0x2A,
                0x09, 0xE0, 0x17, 0xF5, 0x1C, 0x91, 0x7B, 0x3F, 0x1A, 0x36, 0x51, 0xC1, 0x9F, 0xDB, 0xF4, 0x98, 0xBB,
                0x83, 0x37, 0x78, 0x1C, 0x80, 0xBE, 0xDA, 0x1A, 0x89, 0x2C, 0xD6, 0x1E, 0x27, 0x82, 0xF4, 0xD7, 0x8F,
                0x78, 0x22, 0xF6, 0x7D, 0x2C, 0x84, 0xA7, 0x9E, 0x55, 0xB5, 0x81, 0x4E, 0x22, 0xE1, 0x32, 0x3A, 0xAC,
                0x1E, 0xA5, 0x71, 0x01, 0x4C, 0x93, 0x97, 0x62, 0x9C, 0x20, 0xFB, 0x39, 0x61, 0xD3, 0x34, 0x78, 0x54,
                0x0E, 0xD4, 0x34, 0x4A, 0x23, 0xC8, 0xBD, 0x08, 0x24, 0x16, 0xF7, 0x08, 0x24, 0xC4, 0x01, 0x94, 0xB8,
                0x76, 0x88, 0x1C, 0x27, 0x3B, 0xB9, 0x8D, 0xE6, 0x02, 0x49, 0x9E, 0x77, 0x0F, 0xD5, 0x3B, 0x3A, 0xA1,
                0x7E, 0x47, 0xC7, 0x09, 0xAC, 0xEF, 0x0A, 0xA6, 0xF7, 0xB9, 0x33, 0x86, 0xA0, 0x1A, 0xE5, 0xD0, 0x8D,
                0xF2, 0xE6, 0x9D, 0xD7, 0xE1, 0x3C, 0x9E, 0x38, 0x2C, 0xF9, 0x60, 0x55, 0xED, 0xE0, 0xD2, 0x45, 0x00,
                0xC6, 0x5A, 0xCC, 0x59, 0x74, 0x00, 0xC6, 0x7B, 0xB0, 0xDB, 0x8A, 0x1E, 0x56, 0xB7, 0x62, 0x5C, 0xFA,
                0x22, 0x08, 0x62, 0xAF, 0x39, 0x88, 0x06, 0x66, 0xDC, 0x66, 0x12, 0x08, 0x9B, 0x05, 0x4E, 0x2B, 0x95,
                0x30, 0x26, 0xBD, 0xD5, 0x25, 0x5B, 0x17, 0xDC, 0x7A, 0x45, 0x64, 0x6F, 0x1C, 0x54, 0x3C, 0xD7, 0x45,
                0x8A, 0x16, 0x52, 0xC9, 0x98, 0x74, 0x64, 0xEF, 0xD2, 0xDC, 0x49, 0x9A, 0x9B, 0xE6, 0xC2, 0x8E, 0xBA,
                0xBE, 0xC2, 0xE1, 0xA9, 0xBB, 0xC6, 0xEA, 0xB7, 0x4F, 0xA9, 0x34, 0x82, 0x65, 0x3D, 0x60, 0x98, 0x5C,
                0x94, 0x70, 0x62, 0x4E, 0x85, 0xDF, 0x89, 0x05, 0xB2, 0xBE, 0xCE, 0xA7, 0x7D, 0x60, 0x87, 0x3E, 0xA8,
                0x1F, 0x3B, 0x35, 0x8F, 0x7C, 0xE7, 0x85, 0x1C, 0x81, 0x04, 0xE5, 0x18, 0x11, 0xE2, 0x04, 0xC2, 0xFC,
                0xC1, 0xAD, 0x7D, 0xFA, 0xAE, 0x84, 0xAD, 0x3B, 0xA3, 0x00, 0x2E, 0xF4, 0x61, 0x3F, 0xC3, 0xD2, 0x51,
                0xBB, 0x54, 0xAA, 0x70, 0xAA, 0x0E, 0xA3, 0xDC, 0xE7, 0x0C, 0x14, 0x4C, 0x87, 0x40, 0x42, 0xFD, 0x3E,
                0x10, 0x9B, 0xF1, 0x24, 0xE5, 0xC3, 0x30, 0x6D, 0x82, 0x51, 0x44, 0x3C, 0x0A, 0xDB, 0xBC, 0xA8, 0xBA,
                0xF5, 0xBD, 0x8B, 0x97, 0x49, 0xC1, 0xAA, 0xC3, 0x82, 0xD3, 0x38, 0xA1, 0x2A, 0x7B, 0x5D, 0xC6, 0xC7,
                0xD1, 0x04, 0xB9, 0xF4, 0x02, 0x46, 0x63, 0x62, 0x2D, 0x5A, 0xE3, 0xFA, 0x9A, 0x43, 0x0F, 0x7B, 0xD8,
                0xA6, 0xF4, 0x91, 0xB5, 0x79, 0x40, 0x9D, 0x50, 0xB0, 0x7B, 0xA4, 0x48, 0x87, 0x19, 0x13, 0x69, 0x8D,
                0x83, 0x5B, 0x47, 0xAB, 0xB2, 0x88, 0xFA, 0x7E, 0xB0, 0x86, 0x0B, 0x4C, 0xA5, 0x45, 0x9D, 0x15, 0x5D,
                0x30, 0x3F, 0x00, 0x75, 0xC5, 0x44, 0xA7, 0xC1, 0x84, 0xB5, 0x8C, 0x53, 0x5C, 0xE0, 0x3B, 0x45, 0x4C,
                0x02, 0x02, 0x4F, 0xDB, 0x53, 0x44, 0x68, 0xAB, 0xE2, 0x47, 0x0F, 0xE9, 0xD2, 0x5D, 0x7B, 0xEF, 0x68,
                0x85, 0xD3, 0xF3, 0x21, 0x9C, 0x70, 0x1B, 0x27, 0xC6, 0x05, 0x95, 0xAC, 0xDC, 0xFF, 0x48, 0x8A, 0x2B,
                0xDD, 0x40, 0x2E, 0xDD, 0x24, 0x2A, 0xAB, 0x74, 0xDD, 0x1A, 0xA1, 0x0B, 0x1B, 0x74, 0xEE, 0xC7, 0x11,
                0xC2, 0x33, 0xBF, 0x7E, 0xB0, 0x0A, 0x23, 0xC1, 0xCB, 0xB6, 0xD6, 0x9B, 0x48, 0x3D, 0xF2, 0xC1, 0xB7,
                0xD2, 0x22, 0xE5, 0x80, 0x85, 0x02, 0x38, 0x4C, 0x15, 0x56, 0xAA, 0xE9, 0x1E, 0x36, 0xE9, 0xB1, 0x43,
                0x5F, 0x8F, 0xCA, 0x89, 0xB7, 0xF4, 0xF8, 0x84, 0x3E, 0x30, 0x1C, 0x3B, 0xD9, 0x52, 0x35, 0x5F, 0x2E,
                0x7C, 0xE9, 0x47, 0x51, 0xAC, 0x87, 0x2F, 0xE7, 0x2A, 0xE1, 0x12, 0x62, 0xE9, 0x16, 0xFC, 0x49, 0x75,
                0xD6, 0x95, 0xEC, 0xE0, 0x2E, 0x28, 0x7D, 0xF8, 0x13, 0xB1, 0x3D, 0x50, 0x7A, 0x79, 0x3A, 0xA1, 0x62,
                0x58, 0x99, 0xCA, 0xE6, 0x58, 0x8A, 0x46, 0x6B, 0x8D, 0x03, 0xFD, 0xE4, 0x72, 0xB4, 0xAF, 0x5E, 0xE2,
                0xB7, 0xB6, 0x82, 0x8B, 0xF4, 0xEA, 0x73, 0xB1, 0xF4, 0xDF, 0x7C, 0x9F, 0xFE, 0xA6, 0x8A, 0xFF, 0x03,
                0xA9, 0x48, 0xD5, 0xE5
            };

            new ConanStream()
                .WriteHeader(Sender4, Receiver4, headerData, 0x20B9, true)
                .WriteUInt32(0x0000C350)
                .WriteUInt32(account.Character.Id) // 0x0802E5D4) // charid?
                .WriteArray(packetData)
                .Send(client);
        }
    }
}