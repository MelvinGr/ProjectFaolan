// <auto-generated />
using System;
using Faolan.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Faolan.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210228145609_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Faolan.Core.Data.Account", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("AuthStatus")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("ClientInstance")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreateCounter")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreateState")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("CreationDate")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("LastConnection")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastIPAddress")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<byte>("State")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Faolan.Core.Data.Character", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("CreationDate")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("CurrentMapId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Experience")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("HeadMesh")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Language")
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<uint>("LastConnection")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastIPAddress")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<byte>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<float>("PositionX")
                        .HasColumnType("REAL");

                    b.Property<float>("PositionY")
                        .HasColumnType("REAL");

                    b.Property<float>("PositionZ")
                        .HasColumnType("REAL");

                    b.Property<byte>("Race")
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("RealmId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("RotationX")
                        .HasColumnType("REAL");

                    b.Property<float>("RotationY")
                        .HasColumnType("REAL");

                    b.Property<float>("RotationZ")
                        .HasColumnType("REAL");

                    b.Property<byte>("Sex")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("SkinColor")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Voice")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("RealmId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Faolan.Core.Data.Realm", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Country")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FullStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<byte>("LoadStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<byte>("OnlineStatus")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Realms");
                });

            modelBuilder.Entity("Faolan.Core.Data.Spell", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("CastTime")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("EffectSpell")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("ManaCost")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("MaxDamage")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("MinDamage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("Faolan.Core.Data.WorldMap", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<float>("PositionX")
                        .HasColumnType("REAL");

                    b.Property<float>("PositionY")
                        .HasColumnType("REAL");

                    b.Property<float>("PositionZ")
                        .HasColumnType("REAL");

                    b.Property<float>("RotationX")
                        .HasColumnType("REAL");

                    b.Property<float>("RotationY")
                        .HasColumnType("REAL");

                    b.Property<float>("RotationZ")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("WorldMaps");
                });

            modelBuilder.Entity("Faolan.Core.Data.WorldObject", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Data0")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Data1")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Data2")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Data3")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Data4")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Data5")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PositionX")
                        .HasColumnType("REAL");

                    b.Property<float>("PositionY")
                        .HasColumnType("REAL");

                    b.Property<float>("PositionZ")
                        .HasColumnType("REAL");

                    b.Property<float>("RotationX")
                        .HasColumnType("REAL");

                    b.Property<float>("RotationY")
                        .HasColumnType("REAL");

                    b.Property<float>("RotationZ")
                        .HasColumnType("REAL");

                    b.Property<string>("Sdat1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sdat2")
                        .HasColumnType("TEXT");

                    b.Property<uint>("Unk0")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Unk1")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("WorldObjects");
                });

            modelBuilder.Entity("Faolan.Core.Data.Character", b =>
                {
                    b.HasOne("Faolan.Core.Data.Account", "Account")
                        .WithMany("Characters")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Faolan.Core.Data.Realm", "Realm")
                        .WithMany()
                        .HasForeignKey("RealmId");

                    b.Navigation("Account");

                    b.Navigation("Realm");
                });

            modelBuilder.Entity("Faolan.Core.Data.Account", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
